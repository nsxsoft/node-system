var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Component, Emit, Prop } from 'vue-property-decorator';
import { MFormEvents } from '../../utils/form/form-service/form-service';
import { ModulVue } from '../../utils/vue/vue';
import { MMessageState } from '../message/message';
import WithRender from './form.html?style=./form.scss';
var MForm = /** @class */ (function (_super) {
    __extends(MForm, _super);
    function MForm() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.messageStateError = MMessageState.Error;
        _this.errors = [];
        return _this;
    }
    MForm.prototype.onSubmit = function () { };
    MForm.prototype.onReset = function () { };
    Object.defineProperty(MForm.prototype, "hasErrors", {
        get: function () {
            return this.errors.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    MForm.prototype.created = function () {
        this.listeners = this.$form.listeners;
    };
    MForm.prototype.submit = function () {
        this.emit(MFormEvents.formErrorClear);
        if (this.form) {
            this.errors = [];
            this.form.validateAll();
            if (this.form.isValid) {
                this.onSubmit();
            }
            else {
                this.handleErrors();
            }
        }
        else {
            this.onSubmit();
        }
    };
    MForm.prototype.reset = function () {
        this.errors = [];
        this.emit(MFormEvents.formErrorClear);
        if (this.form) {
            this.form.reset();
        }
        this.onReset();
    };
    MForm.prototype.setListeners = function (listeners) {
        this.listeners = listeners;
    };
    MForm.prototype.handleErrors = function () {
        var _this = this;
        this.emit(MFormEvents.formError, {
            form: this.form,
            totalNbOfErrors: this.form.totalNbOfErrors,
            errorsToShowInMessagesCallback: function (errors) {
                _this.errors = errors;
            }
        });
    };
    MForm.prototype.emit = function (eventType, params) {
        this.listeners
            .filter(function (listener) { return listener.eventType === eventType; })
            .forEach(function (listener) { return listener.callback(params); });
    };
    __decorate([
        Prop()
    ], MForm.prototype, "form", void 0);
    __decorate([
        Prop()
    ], MForm.prototype, "requiredMarker", void 0);
    __decorate([
        Emit('submit')
    ], MForm.prototype, "onSubmit", null);
    __decorate([
        Emit('reset')
    ], MForm.prototype, "onReset", null);
    MForm = __decorate([
        WithRender,
        Component
    ], MForm);
    return MForm;
}(ModulVue));
export { MForm };
//# sourceMappingURL=form.js.map