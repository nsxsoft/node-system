import { FORM_FIELD_NAME } from '../../directives/directive-names';
import { FormClearToastBehavior, FormErrorFocusBehavior, FormErrorToastBehavior, MFormService } from '../../utils/form/form-service/form-service';
import ScrollToPlugin from '../../utils/scroll-to/scroll-to';
import ToastServicePlugin from '../../utils/toast/toast-service';
import { FORM } from '../component-names';
import I18nPlugin from '../i18n/i18n';
import MessagePlugin from '../message/message';
import ToastPlugin from '../toast/toast';
import { MForm } from './form';
import { FormFieldDirective } from './form-field';
export var FormPlugin = {
    install: function (v, options) {
        v.prototype.$log.debug(FORM, 'plugin.install');
        v.use(I18nPlugin);
        v.use(MessagePlugin);
        v.use(ToastPlugin);
        v.use(ToastServicePlugin);
        v.use(ScrollToPlugin);
        v.directive(FORM_FIELD_NAME, FormFieldDirective);
        v.component(FORM, MForm);
        var form;
        if (options && options.formListeners) {
            form = new MFormService(options.formListeners);
        }
        else {
            form = new MFormService([
                new FormErrorToastBehavior(),
                new FormClearToastBehavior(),
                new FormErrorFocusBehavior()
            ]);
        }
        (v.prototype).$form = form;
    }
};
export default FormPlugin;
//# sourceMappingURL=form.plugin.js.map