var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var MRichTextEditorDefaultOptions = /** @class */ (function () {
    function MRichTextEditorDefaultOptions(key, language) {
        if (language === void 0) { language = 'en_CA'; }
        this.key = key;
        this.language = language;
        this.immediateVueModelUpdate = true;
        this.iconsTemplate = 'font_awesome_5';
        this.charCounterCount = false;
        this.tableInsertHelper = false;
        this.lineBreakerTags = [];
        this.zIndex = 200;
        this.toolbarSticky = true;
        this.toolbarStickyOffset = 0;
        this.pluginsEnabled = ['align', 'draggable', 'embedly', 'entities', 'file', 'fontFamily', 'fontSize', 'fullscreen', 'inlineStyle', 'lineBreaker', 'link', 'lists', 'paragraphFormat', 'paragraphStyle', 'quote', 'save', 'specialCharacters', 'table', 'url', 'wordPaste', 'stylesSubMenu', 'listesSubMenu', 'insertionsSubMenu'];
        this.wordPasteModal = false;
        this.initOnClick = true;
        this.wordPasteKeepFormatting = false;
        this.placeholderText = '';
        this.listAdvancedTypes = false;
        if (!key) {
            throw new Error('In order to use the rich-text-editor you need to provide a valid froala key.');
        }
    }
    return MRichTextEditorDefaultOptions;
}());
export { MRichTextEditorDefaultOptions };
var MRichTextEditorStandardOptions = /** @class */ (function (_super) {
    __extends(MRichTextEditorStandardOptions, _super);
    function MRichTextEditorStandardOptions(key, language) {
        var _this = _super.call(this, key, language) || this;
        _this.toolbarButtons = ['hide', 'styles-sub-menu', 'bold', 'italic', 'subscript', 'superscript', '|', 'listes-sub-menu', 'formatUL',
            'formatOL', 'outdent', 'indent', '|', 'insertLink', 'specialCharacters', '|', 'fullscreen'];
        _this.linkEditButtons = ['linkOpen', 'linkEdit', 'linkRemove'];
        _this.linkInsertButtons = [];
        return _this;
    }
    return MRichTextEditorStandardOptions;
}(MRichTextEditorDefaultOptions));
export { MRichTextEditorStandardOptions };
var MRichTextEditorMediaOptions = /** @class */ (function (_super) {
    __extends(MRichTextEditorMediaOptions, _super);
    function MRichTextEditorMediaOptions(key, language) {
        var _this = _super.call(this, key, language) || this;
        _this.imageResizeWithPercent = true;
        _this.imageDefaultWidth = 0;
        _this.imageEditButtons = ['imageReplace', 'imageAlign', 'imageRemove', '|', 'imageLink', 'linkOpen', 'linkEdit', 'linkRemove', '|', 'imageAlt'];
        _this.pluginsEnabled.push('image');
        _this.toolbarButtons.push('insertImage');
        return _this;
    }
    return MRichTextEditorMediaOptions;
}(MRichTextEditorStandardOptions));
export { MRichTextEditorMediaOptions };
//# sourceMappingURL=rich-text-editor-options.js.map