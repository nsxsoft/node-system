import { MFile } from '../../../utils/file/file';
import { ModulVue } from '../../../utils/vue/vue';
export declare enum FroalaStatus {
    Blurring = "blurring",
    Blurred = "blurred",
    Focused = "focused"
}
export declare class VueFroala extends ModulVue {
    tag: 'div' | 'textarea';
    value: string;
    disabled: boolean;
    readonly: boolean;
    config: any;
    customTranslations: {
        [key: string]: string;
    };
    onFullscreen(fullscreenWasActived: boolean): void;
    protected internalValue: string;
    protected currentTag: string;
    protected listeningEvents: Event[];
    protected froalaEditor: any;
    protected _$element: any;
    protected _$editor: any;
    protected currentConfig: any;
    protected defaultConfig: any;
    protected isFocused: boolean;
    protected isInitialized: boolean;
    protected isLoaded: boolean;
    protected isDirty: boolean;
    protected status: FroalaStatus;
    protected isFileUploadOpen: boolean;
    protected fileUploadStoreName: string;
    protected selectedImage: HTMLElement | undefined;
    protected allowedExtensions: string[];
    private imageExtensions;
    private mousedownTriggered;
    private mousedownInsideEditor;
    refreshValue(): void;
    readonly isEmpty: boolean;
    protected addPopup(name: string, icon: string, buttonList: string[]): void;
    protected addSubMenu(name: string, icon: string, buttonList: string[]): void;
    protected addCustomIcons(): void;
    protected addPopups(): void;
    protected addSubMenus(): void;
    protected addImageButton(): void;
    protected filesReady(files: MFile[]): void;
    protected onClose(): void;
    protected filesAdded(files: MFile[]): void;
    protected created(): void;
    protected mousedownListener(event: MouseEvent): void;
    protected mouseupListener(event: MouseEvent): void;
    protected mounted(): void;
    protected destroyed(): void;
    protected beforeDestroy(): void;
    protected readonly collapsed: boolean;
    protected onResize(): void;
    protected desktopMode(): void;
    protected mobileMode(): void;
    private changeMode;
    private createEditor;
    private closeEditor;
    private setDisabled;
    private isDisabled;
    private setReadOnly;
    private simulateReadonlyBlur;
    private internalReadonly;
    private editorIsAvailable;
    private manageInitialFocus;
    private manageLinkInsert;
    private hideToolbar;
    private showToolbar;
    private adjusteToolbarPosition;
    private destroyEditor;
    private updateModel;
    private removeEmptyHTML;
    private registerEvent;
    private registerEvents;
    private htmlSet;
}
export default VueFroala;
//# sourceMappingURL=vue-froala.d.ts.map