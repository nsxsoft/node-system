var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import moment from 'moment';
import Component from 'vue-class-component';
import { Prop } from 'vue-property-decorator';
import { FormatMode } from '../../utils/i18n/i18n';
import { ModulVue } from '../../utils/vue/vue';
import AccordionPlugin from '../accordion/accordion';
import { ERROR_MESSAGE_NAME } from '../component-names';
import I18nPlugin from '../i18n/i18n';
import LinkPlugin from '../link/link';
import MessagePlugin from '../message/message';
import PanelPlugin from '../panel/panel';
import WithRender from './error-message.html?style=./error-message.scss';
var MErrorMessage = /** @class */ (function (_super) {
    __extends(MErrorMessage, _super);
    function MErrorMessage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MErrorMessage.prototype, "userAgent", {
        get: function () {
            return window.navigator.userAgent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MErrorMessage.prototype, "i18nDate", {
        get: function () {
            var result = undefined;
            if (this.date) {
                result = [this.date.format('YYYY-MM-DD'), this.date.format('HH:mm:ss')];
            }
            return this.$i18n.translate('m-error-message:date', result, 0, '', true, FormatMode.Default);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MErrorMessage.prototype, "propStacktrace", {
        get: function () {
            return this.stacktrace && !!this.error;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Prop()
    ], MErrorMessage.prototype, "error", void 0);
    __decorate([
        Prop({
            default: function () { return moment(); }
        })
    ], MErrorMessage.prototype, "date", void 0);
    __decorate([
        Prop()
    ], MErrorMessage.prototype, "referenceNumber", void 0);
    __decorate([
        Prop({
            default: false
        })
    ], MErrorMessage.prototype, "stacktrace", void 0);
    MErrorMessage = __decorate([
        WithRender,
        Component
    ], MErrorMessage);
    return MErrorMessage;
}(ModulVue));
export { MErrorMessage };
var ErrorMessagePlugin = {
    install: function (v, options) {
        v.prototype.$log.error('MErrorMessage will be deprecated in modul v.1.0');
        v.use(I18nPlugin);
        v.use(AccordionPlugin);
        v.use(LinkPlugin);
        v.use(MessagePlugin);
        v.use(PanelPlugin);
        v.component(ERROR_MESSAGE_NAME, MErrorMessage);
    }
};
export default ErrorMessagePlugin;
//# sourceMappingURL=error-message.js.map