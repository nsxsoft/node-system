var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Vue from 'vue';
import Component from 'vue-class-component';
import { Emit, Prop } from 'vue-property-decorator';
import { ICON_NAME } from '../component-names';
import WithRender from './icon.html?style=./icon.scss';
var MIcon = /** @class */ (function (_super) {
    __extends(MIcon, _super);
    function MIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MIcon.prototype.onClick = function (event) { };
    MIcon.prototype.onKeydown = function (event) { };
    Object.defineProperty(MIcon.prototype, "hasSvgTitle", {
        get: function () {
            return !!this.svgTitle;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MIcon.prototype, "spriteId", {
        get: function () {
            if (document.getElementById(this.name)) {
                return '#' + this.name;
            }
            else if (document.getElementById('m-svg__' + this.name)) {
                return '#m-svg__' + this.name;
            }
            else if (this.name) {
                Vue.prototype.$log.warn('"' + this.name + '" is not a valid svg id. Make sure that the sprite has been loaded via the $svg instance service.');
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MIcon.prototype, "showNameAsClassInHtml", {
        get: function () {
            return this.showNameAsClass ? this.name : '';
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Prop({ required: true })
    ], MIcon.prototype, "name", void 0);
    __decorate([
        Prop()
    ], MIcon.prototype, "svgTitle", void 0);
    __decorate([
        Prop({ default: '1em' })
    ], MIcon.prototype, "size", void 0);
    __decorate([
        Prop({ default: false })
    ], MIcon.prototype, "showNameAsClass", void 0);
    __decorate([
        Emit('click')
    ], MIcon.prototype, "onClick", null);
    __decorate([
        Emit('keydown')
    ], MIcon.prototype, "onKeydown", null);
    MIcon = __decorate([
        WithRender,
        Component
    ], MIcon);
    return MIcon;
}(Vue));
export { MIcon };
var IconPlugin = {
    install: function (v, options) {
        v.prototype.$log.debug(ICON_NAME, 'plugin.install');
        v.component(ICON_NAME, MIcon);
    }
};
export default IconPlugin;
//# sourceMappingURL=icon.js.map