var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Component from 'vue-class-component';
import { Prop, Watch } from 'vue-property-decorator';
import uuid from '../../../utils/uuid/uuid';
import { ModulVue } from '../../../utils/vue/vue';
import { BaseMenu } from '../menu';
import WithRender from './menu-item.html?style=./menu-item.scss';
var BaseMenuItem = /** @class */ (function (_super) {
    __extends(BaseMenuItem, _super);
    function BaseMenuItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BaseMenuItem;
}(ModulVue));
export { BaseMenuItem };
var MMenuItem = /** @class */ (function (_super) {
    __extends(MMenuItem, _super);
    function MMenuItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.group = false;
        _this.selected = false;
        _this.groupSelected = false;
        _this.insideGroup = false;
        // should be initialized to be reactive
        // tslint:disable-next-line:no-null-keyword
        _this.menuRoot = null;
        // tslint:disable-next-line:no-null-keyword
        _this.groupItemRoot = null;
        _this.internalOpen = false;
        _this.ariaControls = "mMenuItem-" + uuid.generate() + "-controls";
        return _this;
    }
    MMenuItem_1 = MMenuItem;
    MMenuItem.prototype.mounted = function () {
        var _this = this;
        var menuRoot = this.getParent(function (p) { return p instanceof BaseMenu || p.$options.name === 'MMenu'; });
        if (menuRoot) {
            this.menuRoot = menuRoot;
        }
        else {
            console.error('<m-menu-item> need to be inside <m-menu>');
        }
        this.$children.forEach(function (item) {
            if (item instanceof MMenuItem_1) {
                _this.group = true;
            }
        });
        this.propOpen = this.open;
    };
    MMenuItem.prototype.openChanged = function (open) {
        this.propOpen = open;
    };
    Object.defineProperty(MMenuItem.prototype, "propOpen", {
        get: function () {
            return this.internalOpen;
        },
        set: function (open) {
            if (this.group) {
                this.internalOpen = open;
                this.$emit('update:open', open);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MMenuItem.prototype, "isAnimReady", {
        get: function () {
            return this.menuRoot ? this.menuRoot.animReady : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MMenuItem.prototype, "isUrl", {
        get: function () {
            return !!this.url && !this.group;
        },
        enumerable: true,
        configurable: true
    });
    MMenuItem.prototype.toggleOpen = function () {
        this.propOpen = !this.propOpen;
    };
    Object.defineProperty(MMenuItem.prototype, "isDisabled", {
        get: function () {
            return this.menuRoot && this.menuRoot.propDisabled ? true : this.disabled;
        },
        enumerable: true,
        configurable: true
    });
    MMenuItem.prototype.onClick = function (event) {
        if (!this.isDisabled && this.menuRoot && !this.menuRoot.closeOnSelectionInAction) {
            if (this.group) {
                this.toggleOpen();
            }
            else if (this.value !== this.menuRoot.model) {
                this.menuRoot.updateValue(this.value);
                this.menuRoot.onClick(event, this.value);
            }
            this.$emit('click', event);
        }
    };
    var MMenuItem_1;
    __decorate([
        Prop()
    ], MMenuItem.prototype, "open", void 0);
    __decorate([
        Prop()
    ], MMenuItem.prototype, "value", void 0);
    __decorate([
        Prop()
    ], MMenuItem.prototype, "label", void 0);
    __decorate([
        Prop()
    ], MMenuItem.prototype, "url", void 0);
    __decorate([
        Prop()
    ], MMenuItem.prototype, "iconName", void 0);
    __decorate([
        Prop()
    ], MMenuItem.prototype, "disabled", void 0);
    __decorate([
        Watch('open')
    ], MMenuItem.prototype, "openChanged", null);
    MMenuItem = MMenuItem_1 = __decorate([
        WithRender,
        Component
    ], MMenuItem);
    return MMenuItem;
}(BaseMenuItem));
export { MMenuItem };
//# sourceMappingURL=menu-item.js.map