var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Component from 'vue-class-component';
import { Emit, Prop } from 'vue-property-decorator';
import { FormatMode } from '../../utils/i18n/i18n';
import { ModulVue } from '../../utils/vue/vue';
import ButtonPlugin, { MButtonSkin } from '../button/button';
import { SHOW_MORE_NAME } from '../component-names';
import ProgressPlugin from '../progress/progress';
import WithRender from './show-more.html?style=./show-more.scss';
var MShowMore = /** @class */ (function (_super) {
    __extends(MShowMore, _super);
    function MShowMore() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MShowMore.prototype, "isVisible", {
        get: function () {
            return this.nbTotal !== undefined && this.nbTotal > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MShowMore.prototype, "isProgressVisible", {
        get: function () {
            return this.nbVisible < this.nbTotal;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MShowMore.prototype, "status", {
        get: function () {
            return this.$i18n.translate('m-show-more:status', { nbVisible: this.nbVisible, nbTotal: this.nbTotal }, undefined, undefined, undefined, FormatMode.Sprintf);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MShowMore.prototype, "visiblePourcentage", {
        get: function () {
            return (this.nbVisible / this.nbTotal) * 100;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MShowMore.prototype, "buttonLabel", {
        get: function () {
            return this.$i18n.translate('m-show-more:button-label');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MShowMore.prototype, "buttonSkin", {
        get: function () {
            return MButtonSkin.Secondary;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MShowMore.prototype, "isButtonVisible", {
        get: function () {
            return this.nbVisible < this.nbTotal;
        },
        enumerable: true,
        configurable: true
    });
    MShowMore.prototype.showMore = function () {
        this.$emit('update:loading', true);
    };
    __decorate([
        Prop({ default: 0 })
    ], MShowMore.prototype, "nbVisible", void 0);
    __decorate([
        Prop({ required: true })
    ], MShowMore.prototype, "nbTotal", void 0);
    __decorate([
        Prop({ default: false })
    ], MShowMore.prototype, "loading", void 0);
    __decorate([
        Prop()
    ], MShowMore.prototype, "skin", void 0);
    __decorate([
        Emit('click')
    ], MShowMore.prototype, "showMore", null);
    MShowMore = __decorate([
        WithRender,
        Component
    ], MShowMore);
    return MShowMore;
}(ModulVue));
export { MShowMore };
var ShowMorePlugin = {
    install: function (v, options) {
        v.use(ButtonPlugin);
        v.use(ProgressPlugin);
        v.component(SHOW_MORE_NAME, MShowMore);
    }
};
export default ShowMorePlugin;
//# sourceMappingURL=show-more.js.map