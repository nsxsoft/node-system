var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import moment from 'moment';
import Vue from 'vue';
import Component from 'vue-class-component';
import { Emit, Model, Prop, Watch } from 'vue-property-decorator';
import PopupDirectivePlugin from '../../directives/popup/popup';
import { InputLabel } from '../../mixins/input-label/input-label';
import { InputPopup } from '../../mixins/input-popup/input-popup';
import { InputState } from '../../mixins/input-state/input-state';
import { MediaQueries } from '../../mixins/media-queries/media-queries';
import MediaQueriesPlugin from '../../utils/media-queries/media-queries';
import ModulDate from '../../utils/modul-date/modul-date';
import uuid from '../../utils/uuid/uuid';
import { ModulVue } from '../../utils/vue/vue';
import ButtonPlugin from '../button/button';
import CalendarPlugin from '../calendar/calendar';
import { DATEPICKER_NAME } from '../component-names';
import IconButtonPlugin from '../icon-button/icon-button';
import InputStylePlugin from '../input-style/input-style';
import PopupPlugin from '../popup/popup';
import ValidationMessagePlugin from '../validation-message/validation-message';
import { InputManagement } from './../../mixins/input-management/input-management';
import WithRender from './datepicker.html?style=./datepicker.scss';
var MDatepicker = /** @class */ (function (_super) {
    __extends(MDatepicker, _super);
    function MDatepicker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.internalOpen = false;
        _this.selectedYear = 0;
        _this.selectedMonth = 0;
        _this.selectedDay = 0;
        _this.internalCalandarErrorMessage = '';
        _this.id = "mDatepicker-" + uuid.generate();
        return _this;
    }
    MDatepicker.prototype.onBlur = function () { };
    MDatepicker.prototype.created = function () {
        moment.locale([this.$i18n.currentLang(), 'en-ca']);
    };
    MDatepicker.prototype.inputOnKeydownDelete = function () {
        this.$emit('change', '');
    };
    Object.defineProperty(MDatepicker.prototype, "formattedDate", {
        get: function () {
            return this.value ? moment(this.value).format(this.format) : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MDatepicker.prototype, "calandarError", {
        get: function () {
            return this.internalCalandarErrorMessage !== '' || this.as().hasError;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MDatepicker.prototype, "calandarErrorMessage", {
        get: function () {
            return this.as().errorMessage !== undefined ? this.as().errorMessage : this.internalCalandarErrorMessage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MDatepicker.prototype, "open", {
        get: function () {
            return this.internalOpen;
        },
        set: function (open) {
            if (this.as().active) {
                this.internalOpen = open;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MDatepicker.prototype, "ariaControls1", {
        get: function () {
            return this.id + '-controls-1';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MDatepicker.prototype, "ariaControls2", {
        get: function () {
            return this.id + '-controls-2';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MDatepicker.prototype, "minDateString", {
        get: function () {
            return moment(this.min).format('Y-M-D');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MDatepicker.prototype, "maxDateString", {
        get: function () {
            return moment(this.max).format('Y-M-D');
        },
        enumerable: true,
        configurable: true
    });
    MDatepicker.prototype.updateFocus = function () {
        this.open = this.as().focus;
    };
    MDatepicker.prototype.onOpen = function () {
        return __awaiter(this, void 0, void 0, function () {
            var inputEl;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.$nextTick()];
                    case 1:
                        _a.sent();
                        inputEl = this.$refs.input;
                        inputEl.focus();
                        inputEl.setSelectionRange(0, this.formattedDate.length);
                        this.setSelectionToCurrentValue();
                        return [2 /*return*/];
                }
            });
        });
    };
    MDatepicker.prototype.onClose = function () { };
    MDatepicker.prototype.validateDate = function (event) {
        if (event.target.value === '') {
            if (this.required) {
                this.internalCalandarErrorMessage = this.$i18n.translate('m-datepicker:required-error');
            }
            else {
                this.$emit('change', '');
                this.internalCalandarErrorMessage = '';
            }
        }
        else if (moment(event.target.value, this.format).isValid()) {
            var newDate = moment(event.target.value, this.format);
            if (newDate.isBetween(this.min, this.max, 'day', '[]')) {
                this.$emit('change', newDate);
                this.internalCalandarErrorMessage = '';
            }
            else {
                this.internalCalandarErrorMessage = this.$i18n.translate('m-datepicker:out-of-range-error');
            }
        }
        else {
            this.internalCalandarErrorMessage = this.$i18n.translate('m-datepicker:format-error');
        }
    };
    MDatepicker.prototype.selectDate = function (selectedDate) {
        this.internalCalandarErrorMessage = '';
        this.$emit('change', this.createModelUpdateValue(selectedDate));
        this.open = false;
    };
    MDatepicker.prototype.createModelUpdateValue = function (newValue) {
        if (newValue && newValue instanceof Date) {
            return new Date(newValue);
        }
        else {
            return newValue;
        }
    };
    MDatepicker.prototype.setSelectionToCurrentValue = function () {
        var value = this.value || this.getDefaultCurrentValue();
        if (value instanceof Date) {
            this.selectedYear = value.getFullYear();
            this.selectedMonth = value.getMonth();
            this.selectedDay = value.getDate();
        }
        else {
            var dateValue = new Date(value);
            this.selectedYear = dateValue.getFullYear();
            this.selectedMonth = dateValue.getMonth();
            this.selectedDay = dateValue.getDate();
        }
    };
    MDatepicker.prototype.getDefaultCurrentValue = function () {
        if (moment(this.min).isAfter(moment(new Date()))) {
            return this.min;
        }
        else {
            return new Date();
        }
    };
    __decorate([
        Model('change'),
        Prop()
    ], MDatepicker.prototype, "value", void 0);
    __decorate([
        Prop()
    ], MDatepicker.prototype, "label", void 0);
    __decorate([
        Prop()
    ], MDatepicker.prototype, "iconName", void 0);
    __decorate([
        Prop()
    ], MDatepicker.prototype, "required", void 0);
    __decorate([
        Prop({ default: 'YYYY/MM/DD' })
    ], MDatepicker.prototype, "format", void 0);
    __decorate([
        Prop({ default: function () { return new ModulDate().subtract(10, 'year'); } })
    ], MDatepicker.prototype, "min", void 0);
    __decorate([
        Prop({ default: function () { return new ModulDate().add(10, 'year'); } })
    ], MDatepicker.prototype, "max", void 0);
    __decorate([
        Prop({ default: function () { return Vue.prototype.$i18n.translate('m-datepicker:placeholder'); } })
    ], MDatepicker.prototype, "placeholder", void 0);
    __decorate([
        Emit('blur')
    ], MDatepicker.prototype, "onBlur", null);
    __decorate([
        Watch('focus')
    ], MDatepicker.prototype, "updateFocus", null);
    __decorate([
        Emit('open')
    ], MDatepicker.prototype, "onOpen", null);
    __decorate([
        Emit('close')
    ], MDatepicker.prototype, "onClose", null);
    MDatepicker = __decorate([
        WithRender,
        Component({
            mixins: [
                InputState,
                InputLabel,
                InputPopup,
                InputManagement,
                MediaQueries
            ]
        })
    ], MDatepicker);
    return MDatepicker;
}(ModulVue));
export { MDatepicker };
var DatepickerPlugin = {
    install: function (v) {
        v.use(InputStylePlugin);
        v.use(ButtonPlugin);
        v.use(IconButtonPlugin);
        v.use(PopupPlugin);
        v.use(ValidationMessagePlugin);
        v.use(MediaQueriesPlugin);
        v.use(PopupDirectivePlugin);
        v.use(CalendarPlugin);
        v.component(DATEPICKER_NAME, MDatepicker);
    }
};
export default DatepickerPlugin;
//# sourceMappingURL=datepicker.js.map