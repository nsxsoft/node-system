var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Vue from 'vue';
import Component from 'vue-class-component';
import { Emit, Prop } from 'vue-property-decorator';
import { InputState } from '../../mixins/input-state/input-state';
import { ModulVue } from '../../utils/vue/vue';
import { DATERANGEPICKER_NAME } from '../component-names';
import DatepickerPlugin from '../datepicker/datepicker';
import MessagePlugin from '../message/message';
import PeriodpickerPlugin from '../periodpicker/periodpicker';
import WithRender from './daterangepicker.html';
var MDaterangepicker = /** @class */ (function (_super) {
    __extends(MDaterangepicker, _super);
    function MDaterangepicker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(MDaterangepicker.prototype, "periodPickerProps", {
        get: function () {
            return { value: this.value, min: this.min, max: this.max };
        },
        enumerable: true,
        configurable: true
    });
    MDaterangepicker.prototype.updateValue = function (newValue) {
        return newValue;
    };
    __decorate([
        Prop()
    ], MDaterangepicker.prototype, "value", void 0);
    __decorate([
        Prop()
    ], MDaterangepicker.prototype, "min", void 0);
    __decorate([
        Prop()
    ], MDaterangepicker.prototype, "max", void 0);
    __decorate([
        Prop({
            default: Vue.prototype.$i18n.translate('m-daterangepicker:label.from')
        })
    ], MDaterangepicker.prototype, "labelFrom", void 0);
    __decorate([
        Prop({
            default: Vue.prototype.$i18n.translate('m-daterangepicker:label.to')
        })
    ], MDaterangepicker.prototype, "labelTo", void 0);
    __decorate([
        Emit('input')
    ], MDaterangepicker.prototype, "updateValue", null);
    MDaterangepicker = __decorate([
        WithRender,
        Component({
            mixins: [InputState]
        })
    ], MDaterangepicker);
    return MDaterangepicker;
}(ModulVue));
export { MDaterangepicker };
var DaterangepickerPlugin = {
    install: function (v) {
        v.use(MessagePlugin);
        v.use(DatepickerPlugin);
        v.use(PeriodpickerPlugin);
        v.component(DATERANGEPICKER_NAME, MDaterangepicker);
    }
};
export default DaterangepickerPlugin;
//# sourceMappingURL=daterangepicker.js.map