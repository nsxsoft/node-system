var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Component from 'vue-class-component';
import { Prop } from 'vue-property-decorator';
import { ModulVue } from '../../utils/vue/vue';
import { TAB_PANEL_NAME } from '../component-names';
import WithRender from './tab-panel.html?style=./tab-panel.scss';
var BaseTabs = /** @class */ (function (_super) {
    __extends(BaseTabs, _super);
    function BaseTabs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BaseTabs;
}(ModulVue));
export { BaseTabs };
var MTabPanel = /** @class */ (function (_super) {
    __extends(MTabPanel, _super);
    function MTabPanel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.inactif = false;
        _this.hasModel = true;
        return _this;
    }
    MTabPanel.prototype.created = function () {
        this.getMTabsRoot(this);
    };
    Object.defineProperty(MTabPanel.prototype, "selected", {
        get: function () {
            return this.root.model === this.value;
        },
        enumerable: true,
        configurable: true
    });
    MTabPanel.prototype.onClick = function () {
        this.root.model = this.value;
    };
    MTabPanel.prototype.getMTabsRoot = function (node) {
        var rootNode = this.getParent(function (p) { return p instanceof BaseTabs; });
        if (rootNode) {
            this.root = rootNode;
        }
        else {
            console.error('m-tabs-pan need to be inside m-tabs');
        }
    };
    __decorate([
        Prop()
    ], MTabPanel.prototype, "label", void 0);
    __decorate([
        Prop()
    ], MTabPanel.prototype, "value", void 0);
    __decorate([
        Prop()
    ], MTabPanel.prototype, "disabled", void 0);
    MTabPanel = __decorate([
        WithRender,
        Component
    ], MTabPanel);
    return MTabPanel;
}(ModulVue));
export { MTabPanel };
var TabPannePlugin = {
    install: function (v, options) {
        v.prototype.$log.error('MTabPanel will be deprecated in modul v.1.0');
        v.component(TAB_PANEL_NAME, MTabPanel);
    }
};
export default TabPannePlugin;
//# sourceMappingURL=tab-panel.js.map