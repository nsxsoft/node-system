var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Component from 'vue-class-component';
import { ModulVue } from '../../utils/vue/vue';
import { PHONE_NUMBER_NAME } from '../component-names';
import WithRender from './phone-number.html?style=./phone-number.scss';
var MPhoneNumber = /** @class */ (function (_super) {
    __extends(MPhoneNumber, _super);
    function MPhoneNumber() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.countryLabel = _this.$i18n.translate('m-phone-number:label.country');
        _this.phoneLabel = _this.$i18n.translate('m-phone-number:label.phone');
        _this.extensionLabel = _this.$i18n.translate('m-phone-number:label.extension');
        _this.countryPlaceholder = _this.$i18n.translate('m-phone-number:placeholder.country');
        _this.numberPlaceholder = _this.$i18n.translate('m-phone-number:placeholder.number');
        _this.extensionPlaceholder = _this.$i18n.translate('m-phone-number:placeholder.extension');
        _this.phoneExample = _this.$i18n.translate('m-phone-number:example');
        _this.canada = _this.$i18n.translate('m-phone-number:canada');
        _this.usa = _this.$i18n.translate('m-phone-number:usa');
        _this.france = _this.$i18n.translate('m-phone-number:france');
        _this.others = _this.$i18n.translate('m-phone-number:others');
        _this.countryModel = '';
        return _this;
    }
    Object.defineProperty(MPhoneNumber.prototype, "countries", {
        get: function () {
            var countriesList = [];
            countriesList.push(this.canada, this.usa, this.france, this.others);
            return countriesList;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MPhoneNumber.prototype, "asExample", {
        get: function () {
            return this.countryModel !== '' && this.countryModel !== this.others;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MPhoneNumber.prototype, "exampleText", {
        get: function () {
            var text;
            switch (this.countryModel) {
                case this.canada:
                    text = '999 999 9999';
                    break;
                case this.usa:
                    text = '999 999 9999';
                    break;
                case this.france:
                    text = '99 99 99 99 99';
                    break;
                default:
                    text = '';
            }
            return text;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MPhoneNumber.prototype, "isNumberDisable", {
        get: function () {
            return this.countryModel === '';
        },
        enumerable: true,
        configurable: true
    });
    MPhoneNumber = __decorate([
        WithRender,
        Component
    ], MPhoneNumber);
    return MPhoneNumber;
}(ModulVue));
export { MPhoneNumber };
var PhoneNumberPlugin = {
    install: function (v, options) {
        v.prototype.$log.error('MPhoneNumber will be deprecated in modul v.1.0');
        v.component(PHONE_NUMBER_NAME, MPhoneNumber);
    }
};
export default PhoneNumberPlugin;
//# sourceMappingURL=phone-number.js.map