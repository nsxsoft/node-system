import Vue, { PluginObject } from 'vue';
import { ModulVue } from '../../utils/vue/vue';
export declare enum MAccordionSkin {
    Default = "default",
    Dark = "dark",
    DarkB = "dark-b",
    Light = "light",
    Plain = "plain"
}
export declare enum MAccordionIconPosition {
    Left = "left",
    Right = "right"
}
export declare enum MAccordionIconSize {
    Small = "small",
    Large = "large"
}
export interface AccordionGateway extends Vue {
    propId: string;
    propOpen: boolean;
    propDisabled: boolean;
}
export interface AccordionGroupGateway {
    skin: MAccordionSkin;
    disabled: boolean;
    concurrent: boolean;
    addAccordion(accordion: AccordionGateway): void;
    removeAccordion(id: string): void;
    closeAllAccordions(): any;
}
export declare class MAccordion extends ModulVue implements AccordionGateway {
    id?: string;
    open: boolean;
    disabled: boolean;
    skin: MAccordionSkin;
    iconPosition?: MAccordionIconPosition;
    iconBorder?: boolean;
    iconSize?: MAccordionIconSize;
    padding: boolean;
    paddingHeader: boolean;
    paddingBody: boolean;
    $refs: {
        accordionHeader: HTMLElement;
    };
    private uuid;
    private internalPropOpen;
    readonly propId: string;
    propOpen: boolean;
    private clickEvent;
    readonly propDisabled: boolean;
    private created;
    private beforeDestroy;
    private readonly propSkin;
    private readonly plusSkin;
    private readonly hasIconBorder;
    private toggleAccordion;
    private syncOpenProp;
}
declare const AccordionPlugin: PluginObject<any>;
export default AccordionPlugin;
//# sourceMappingURL=accordion.d.ts.map