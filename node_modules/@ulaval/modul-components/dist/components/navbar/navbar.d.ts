import { PluginObject } from 'vue';
import { ModulVue } from '../../utils/vue/vue';
export declare abstract class BaseNavbar extends ModulVue {
}
export interface Navbar {
    model: string;
    multiline: boolean;
    autoSelect: boolean;
    updateValue(value: string): void;
    onMouseover(event: Event, value: string): void;
    onMouseleave(event: Event, value: string): void;
    onClick(event: Event, value: string): void;
}
export declare enum MNavbarSkin {
    NavMain = "nav-main",
    NavSub = "nav-sub",
    NavSoft = "nav-soft",
    TabLight = "tab-light",
    TabDark = "tab-dark",
    TabArrow = "tab-arrow",
    TabUnderline = "tab-underline",
    TabSoft = "tab-soft",
    Plain = "plain"
}
export declare enum MNavbarMaxWidth {
    XLarge = "1400px",
    Large = "1200px",
    Regular = "1000px",
    Small = "800px",
    Text = "720px"
}
export declare class MNavbar extends BaseNavbar implements Navbar {
    selected: string;
    skin: string;
    disabled: boolean;
    navigationArrow: boolean;
    maxWidth: string;
    multiline: boolean;
    titleButtonLeft: string;
    titleButtonRight: string;
    autoSelect: boolean;
    $refs: {
        buttonRight: HTMLElement;
        buttonLeft: HTMLElement;
        list: HTMLElement;
        wrap: HTMLElement;
        contents: HTMLElement;
    };
    private animReady;
    private internalValue;
    private showArrowLeft;
    private showArrowRight;
    private computedHeight;
    updateValue(value: any): void;
    onMouseover(event: Event, value: string): void;
    onMouseleave(event: Event, value: string): void;
    onClick(event: Event, value: string): void;
    model: any;
    protected created(): void;
    protected mounted(): void;
    protected beforeDestroy(): void;
    private multilineChanged;
    private setDisplayButtonArrrow;
    private readonly hasArrowRight;
    private readonly hasArrowLeft;
    private setSelectedIndicatorPosition;
    private setAndUpdate;
    private setupScrolllH;
    private scrollToSelected;
    private readonly buttonSkin;
    private readonly buttonRipple;
    private readonly isTabUnderlineSkin;
    private readonly isTabArrowSkin;
    private navbarItems;
    private scrollLeft;
    private scrollRight;
}
declare const NavbarPlugin: PluginObject<any>;
export default NavbarPlugin;
//# sourceMappingURL=navbar.d.ts.map