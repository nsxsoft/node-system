var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Component from 'vue-class-component';
import { Model, Prop, Watch } from 'vue-property-decorator';
import * as TouchPlugin from 'vue-touch';
import { ModulVue } from '../../utils/vue/vue';
import { SLIDER_NAME } from '../component-names';
import WithRender from './slider.html?style=./slider.scss';
var MSlider = /** @class */ (function (_super) {
    __extends(MSlider, _super);
    function MSlider() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.internalValue = 50;
        _this.range = _this.max - _this.min;
        return _this;
    }
    MSlider.prototype.mounted = function () {
        var _this = this;
        this.model = this.value;
        this.setElOffset = window.setInterval(function () {
            _this.offsetLeft = _this.$el.getBoundingClientRect().left;
            _this.offsetRatio = _this.range / _this.$el.clientWidth;
        }, 300);
    };
    MSlider.prototype.beforeDestroy = function () {
        window.clearInterval(this.setElOffset);
    };
    MSlider.prototype.onValueChange = function (value) {
        this.model = value;
    };
    Object.defineProperty(MSlider.prototype, "model", {
        get: function () {
            return this.internalValue;
        },
        set: function (value) {
            this.internalValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MSlider.prototype, "percentage", {
        get: function () {
            return ((this.model - this.min) / this.range) * 100;
        },
        enumerable: true,
        configurable: true
    });
    MSlider.prototype.computeNearestStep = function (position) {
        return Math.round(((position - this.offsetLeft) * this.offsetRatio + this.min) / this.step) * this.step;
    };
    MSlider.prototype.onClick = function (event) {
        this.model = Math.max(this.min, Math.min(this.max, this.computeNearestStep(event.clientX)));
        this.$emit('change', this.model);
    };
    MSlider.prototype.onPanmove = function (event) {
        this.model = Math.max(this.min, Math.min(this.max, this.computeNearestStep(event.center.x)));
        this.$emit('change', this.model);
    };
    MSlider.prototype.onPanend = function () {
        this.$emit('change', this.model);
    };
    MSlider.prototype.onKeydown = function (event) {
        // tslint:disable-next-line: deprecation
        switch (event.keyCode) {
            case 37:
                this.decrement(this.step);
                break;
            case 39:
                this.increment(this.step);
                break;
        }
        this.$emit('change', this.model);
    };
    MSlider.prototype.decrement = function (value) {
        this.model = Math.max(this.min, this.internalValue - value);
    };
    MSlider.prototype.increment = function (value) {
        this.model = Math.min(this.max, this.internalValue + value);
    };
    __decorate([
        Model('change'),
        Prop({ default: 50 })
    ], MSlider.prototype, "value", void 0);
    __decorate([
        Prop({ default: 0 })
    ], MSlider.prototype, "min", void 0);
    __decorate([
        Prop({ default: 100 })
    ], MSlider.prototype, "max", void 0);
    __decorate([
        Prop({ default: 1 })
    ], MSlider.prototype, "step", void 0);
    __decorate([
        Watch('value')
    ], MSlider.prototype, "onValueChange", null);
    MSlider = __decorate([
        WithRender,
        Component
    ], MSlider);
    return MSlider;
}(ModulVue));
export { MSlider };
var SliderPlugin = {
    install: function (v, options) {
        v.prototype.$log.error('MSlider will be deprecated in modul v.1.0');
        v.use(TouchPlugin, { name: 'v-touch' }); // @todo really needed? should be loaded only by slider component.
        v.component(SLIDER_NAME, MSlider);
    }
};
export default SliderPlugin;
//# sourceMappingURL=slider.js.map