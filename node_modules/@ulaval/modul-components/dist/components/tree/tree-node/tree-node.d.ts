import { ModulVue } from '../../../utils/vue/vue';
import { MCheckboxes, TreeNode } from '../tree';
export declare class MTreeNode extends ModulVue {
    node: TreeNode;
    open: boolean;
    selectedNodes: string[];
    checkboxes: MCheckboxes;
    selectable: boolean;
    readonly: boolean;
    useFilesIcons: boolean;
    path: string;
    placeholder: string;
    hasSibling: boolean;
    disabledNodes: string[];
    internalOpen: boolean;
    allChildrenAndSelfSelected: boolean;
    private selectedChildrenCount;
    notifyParentOfChildCheckboxState(): void;
    protected mounted(): void;
    onClick(): void;
    onChildClick(path: string): string;
    onAutoSelectButtonClick(): void;
    onAutoSelectChildCheckboxChange(selected: boolean, ignoreCount?: boolean): void;
    childHasSibling(index: number): boolean;
    onCheckboxClick(): void;
    private recursiveSelect;
    private updateSelectedNodes;
    private fetchChildrenPaths;
    private isParentOfOpenedFolder;
    private updateCheckboxParentNode;
    private updateButtonParentNode;
    readonly isParentOfSelectedFile: boolean;
    readonly isDisabled: boolean;
    readonly isReadonlyStyle: boolean;
    readonly currentPath: string;
    readonly label: string;
    readonly propCheckboxes: MCheckboxes;
    readonly moveSelectionZoneToCheckbox: boolean;
    readonly displaySelectionButton: boolean;
    readonly hasChildren: boolean;
    readonly isFolder: boolean;
    readonly isSelected: boolean;
    readonly isIndeterminate: boolean;
    readonly emptyContentMessage: string;
    readonly withCheckboxes: boolean;
    private readonly isParentAutoSelect;
    private readonly isButtonAutoSelect;
    private readonly isCheckboxAutoSelect;
}
//# sourceMappingURL=tree-node.d.ts.map