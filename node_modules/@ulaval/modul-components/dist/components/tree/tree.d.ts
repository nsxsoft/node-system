import { PluginObject } from 'vue';
import { ModulVue } from '../../utils/vue/vue';
export interface TreeNode {
    id: string;
    label?: string;
    open?: boolean;
    children?: TreeNode[];
    hasChildren?: boolean;
    data?: any;
}
export declare enum MSelectionMode {
    None = "none",
    Single = "single",
    Multiple = "multiple",
    Readonly = "readonly"
}
export declare enum MCheckboxes {
    True = "true",
    False = "false",
    WithButtonAutoSelect = "with-button-auto-select",
    WithCheckboxAutoSelect = "with-checkbox-auto-select",
    WithParentAutoSelect = "with-parent-auto-select"
}
export declare class MTree extends ModulVue {
    tree: TreeNode[];
    selectionMode: MSelectionMode;
    checkboxes: MCheckboxes;
    selectedNodes: string[];
    useFilesIcons: boolean;
    disabledNodes: string[];
    propSelectedNodes: string[];
    errorTree: boolean;
    private selectedNodesFound;
    onClick(path: string): string;
    protected created(): void;
    private browseTree;
    private pathIsDisabled;
    private browseNode;
    readonly propTreeEmpty: boolean;
    readonly propDisabledNodes: string[];
    readonly selectable: boolean;
    readonly isReadonly: boolean;
    readonly isMultipleSelectWithCheckboxes: boolean;
    readonly withCheckboxes: boolean;
    readonly isSingleNodeTree: boolean;
}
declare const TreePlugin: PluginObject<any>;
export default TreePlugin;
//# sourceMappingURL=tree.d.ts.map