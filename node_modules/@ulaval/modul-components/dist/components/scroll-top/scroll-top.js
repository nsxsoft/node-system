var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Component from 'vue-class-component';
import { Emit, Prop } from 'vue-property-decorator';
import ScrollToPlugin, { ScrollToDuration } from '../../utils/scroll-to/scroll-to';
import { ModulVue } from '../../utils/vue/vue';
import { SCROLL_TOP_NAME } from '../component-names';
import I18nPlugin from '../i18n/i18n';
import IconPlugin from '../icon/icon';
import WithRender from './scroll-top.html?style=./scroll-top.scss';
export var MScrollTopPosition;
(function (MScrollTopPosition) {
    MScrollTopPosition["Fixed"] = "fixed";
    MScrollTopPosition["Relative"] = "relative";
})(MScrollTopPosition || (MScrollTopPosition = {}));
var MScrollTop = /** @class */ (function (_super) {
    __extends(MScrollTop, _super);
    function MScrollTop() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.show = false;
        _this.scrollTopBreakPoint = window.innerHeight * 0.2;
        return _this;
    }
    MScrollTop.prototype.onClick = function (event) {
        this.$scrollTo.goToTop(this.duration);
    };
    MScrollTop.prototype.created = function () {
        if (this.isPositionFixed) {
            this.$modul.event.$on('scroll', this.onScroll);
        }
        else {
            this.show = true;
        }
    };
    MScrollTop.prototype.onScroll = function () {
        var scrollPosition = window.pageYOffset;
        this.show = scrollPosition > this.scrollTopBreakPoint;
    };
    Object.defineProperty(MScrollTop.prototype, "isPositionFixed", {
        get: function () {
            return this.position === MScrollTopPosition.Fixed;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Prop({
            default: MScrollTopPosition.Fixed,
            validator: function (value) {
                return value === MScrollTopPosition.Fixed ||
                    value === MScrollTopPosition.Relative;
            }
        })
    ], MScrollTop.prototype, "position", void 0);
    __decorate([
        Prop({
            default: ScrollToDuration.Regular,
            validator: function (value) {
                return value === ScrollToDuration.Regular ||
                    value === ScrollToDuration.Long;
            }
        })
    ], MScrollTop.prototype, "duration", void 0);
    __decorate([
        Emit('click')
    ], MScrollTop.prototype, "onClick", null);
    MScrollTop = __decorate([
        WithRender,
        Component
    ], MScrollTop);
    return MScrollTop;
}(ModulVue));
export { MScrollTop };
var ScrollTopPlugin = {
    install: function (v, options) {
        v.use(IconPlugin);
        v.use(I18nPlugin);
        v.use(ScrollToPlugin);
        v.component(SCROLL_TOP_NAME, MScrollTop);
    }
};
export default ScrollTopPlugin;
//# sourceMappingURL=scroll-top.js.map