var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Component from 'vue-class-component';
import { Emit, Prop } from 'vue-property-decorator';
import { ModulVue } from '../../utils/vue/vue';
import { TABLE_NAME } from '../component-names';
import ProgressPlugin from '../progress/progress';
import WithRender from './table.html?style=./table.scss';
export var MTableSkin;
(function (MTableSkin) {
    MTableSkin["Regular"] = "regular";
})(MTableSkin || (MTableSkin = {}));
var MTable = /** @class */ (function (_super) {
    __extends(MTable, _super);
    function MTable() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.i18nEmptyTable = _this.$i18n.translate('m-table:empty-table');
        _this.i18nLoading = _this.$i18n.translate('m-table:loading');
        _this.i18nPleaseWait = _this.$i18n.translate('m-table:please-wait');
        return _this;
    }
    MTable.prototype.onAdd = function () {
    };
    Object.defineProperty(MTable.prototype, "isEmpty", {
        get: function () {
            return this.rows.length === 0 && !this.loading;
        },
        enumerable: true,
        configurable: true
    });
    MTable.prototype.columnWidth = function (col) {
        return col.width ? { width: col.width } : '';
    };
    __decorate([
        Prop({
            default: MTableSkin.Regular,
            validator: function (value) {
                return value === MTableSkin.Regular;
            }
        })
    ], MTable.prototype, "skin", void 0);
    __decorate([
        Prop({ default: function () { return []; } })
    ], MTable.prototype, "columns", void 0);
    __decorate([
        Prop({ default: function () { return []; } })
    ], MTable.prototype, "rows", void 0);
    __decorate([
        Prop({ default: false })
    ], MTable.prototype, "loading", void 0);
    __decorate([
        Emit('add')
    ], MTable.prototype, "onAdd", null);
    MTable = __decorate([
        WithRender,
        Component
    ], MTable);
    return MTable;
}(ModulVue));
export { MTable };
var TablePlugin = {
    install: function (v, options) {
        v.use(ProgressPlugin);
        v.component(TABLE_NAME, MTable);
    }
};
export default TablePlugin;
//# sourceMappingURL=table.js.map