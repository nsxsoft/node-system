var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Vue from 'vue';
import Component from 'vue-class-component';
import { Emit, Prop } from 'vue-property-decorator';
import { LIST_ITEM_NAME } from '../component-names';
import I18nPlugin from '../i18n/i18n';
import IconButtonPlugin from '../icon-button/icon-button';
import SpinnerPlugin from '../spinner/spinner';
import WithRender from './list-item.html?style=./list-item.scss';
var MListItem = /** @class */ (function (_super) {
    __extends(MListItem, _super);
    function MListItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MListItem.prototype.click = function (event) { };
    Object.defineProperty(MListItem.prototype, "hasIcon", {
        get: function () {
            return this.iconName !== '' && this.iconName !== undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MListItem.prototype, "isWaiting", {
        get: function () {
            return this.waiting && !this.disabled;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Prop()
    ], MListItem.prototype, "iconName", void 0);
    __decorate([
        Prop()
    ], MListItem.prototype, "iconHiddenText", void 0);
    __decorate([
        Prop()
    ], MListItem.prototype, "disabled", void 0);
    __decorate([
        Prop()
    ], MListItem.prototype, "waiting", void 0);
    __decorate([
        Prop({ default: false })
    ], MListItem.prototype, "fullWidth", void 0);
    __decorate([
        Prop({ default: false })
    ], MListItem.prototype, "fullHeight", void 0);
    __decorate([
        Prop({ default: false })
    ], MListItem.prototype, "borderTop", void 0);
    __decorate([
        Prop({ default: false })
    ], MListItem.prototype, "borderBottom", void 0);
    __decorate([
        Emit('click')
    ], MListItem.prototype, "click", null);
    MListItem = __decorate([
        WithRender,
        Component
    ], MListItem);
    return MListItem;
}(Vue));
export { MListItem };
var ListItemPlugin = {
    install: function (v, options) {
        v.use(IconButtonPlugin);
        v.use(SpinnerPlugin);
        v.use(I18nPlugin);
        v.component(LIST_ITEM_NAME, MListItem);
    }
};
export default ListItemPlugin;
//# sourceMappingURL=list-item.js.map