var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Component from 'vue-class-component';
import { Prop } from 'vue-property-decorator';
import uuid from '../../utils/uuid/uuid';
import { ModulVue } from '../../utils/vue/vue';
import { OPTION_ITEM_ADD_NAME, OPTION_ITEM_ARCHIVE_NAME, OPTION_ITEM_DELETE_NAME, OPTION_ITEM_EDIT_NAME, OPTION_ITEM_NAME, OPTION_NAME } from '../component-names';
import I18nPlugin from '../i18n/i18n';
import IconButtonPlugin from '../icon-button/icon-button';
import IconPlugin from '../icon/icon';
import { MPopperPlacement } from '../popper/popper';
import PopupPlugin from '../popup/popup';
import { MOptionItem } from './option-item/option-item';
import { MOptionItemAdd } from './option-item/option-item-add';
import { MOptionItemArchive } from './option-item/option-item-archive';
import { MOptionItemDelete } from './option-item/option-item-delete';
import { MOptionItemEdit } from './option-item/option-item-edit';
import WithRender from './option.html?style=./option.scss';
var BaseOption = /** @class */ (function (_super) {
    __extends(BaseOption, _super);
    function BaseOption() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BaseOption;
}(ModulVue));
export { BaseOption };
export var MOptionsSkin;
(function (MOptionsSkin) {
    MOptionsSkin["Light"] = "light";
    MOptionsSkin["Dark"] = "dark";
})(MOptionsSkin || (MOptionsSkin = {}));
var MOption = /** @class */ (function (_super) {
    __extends(MOption, _super);
    function MOption() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasIcon = false;
        _this.open = false;
        _this.id = "mOption-" + uuid.generate();
        return _this;
    }
    MOption.prototype.checkIcon = function (icon) {
        if (icon) {
            this.hasIcon = true;
        }
    };
    MOption.prototype.close = function () {
        this.open = false;
        this.onClose();
    };
    MOption.prototype.onOpen = function () {
        this.$emit('open');
    };
    MOption.prototype.onClose = function () {
        this.$emit('close');
    };
    MOption.prototype.onClick = function ($event) {
        this.$emit('click', $event);
    };
    MOption.prototype.getOpenTitle = function () {
        return this.openTitle === undefined ? this.$i18n.translate('m-option:open') : this.openTitle;
    };
    MOption.prototype.getCloseTitle = function () {
        return this.closeTitle === undefined ? this.$i18n.translate('m-option:close') : this.closeTitle;
    };
    Object.defineProperty(MOption.prototype, "propTitle", {
        get: function () {
            return this.open ? this.getCloseTitle() : this.getOpenTitle();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MOption.prototype, "ariaControls", {
        get: function () {
            return this.id + '-controls';
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Prop({
            default: MPopperPlacement.Bottom,
            validator: function (value) {
                return value === MPopperPlacement.Bottom ||
                    value === MPopperPlacement.BottomEnd ||
                    value === MPopperPlacement.BottomStart ||
                    value === MPopperPlacement.Left ||
                    value === MPopperPlacement.LeftEnd ||
                    value === MPopperPlacement.LeftStart ||
                    value === MPopperPlacement.Right ||
                    value === MPopperPlacement.RightEnd ||
                    value === MPopperPlacement.RightStart ||
                    value === MPopperPlacement.Top ||
                    value === MPopperPlacement.TopEnd ||
                    value === MPopperPlacement.TopStart;
            }
        })
    ], MOption.prototype, "placement", void 0);
    __decorate([
        Prop({
            default: MOptionsSkin.Light,
            validator: function (value) {
                return value === MOptionsSkin.Light ||
                    value === MOptionsSkin.Dark;
            }
        })
    ], MOption.prototype, "skin", void 0);
    __decorate([
        Prop()
    ], MOption.prototype, "openTitle", void 0);
    __decorate([
        Prop()
    ], MOption.prototype, "closeTitle", void 0);
    __decorate([
        Prop()
    ], MOption.prototype, "disabled", void 0);
    __decorate([
        Prop({ default: '44px' })
    ], MOption.prototype, "size", void 0);
    __decorate([
        Prop({ default: false })
    ], MOption.prototype, "focusManagement", void 0);
    MOption = __decorate([
        WithRender,
        Component
    ], MOption);
    return MOption;
}(BaseOption));
export { MOption };
var OptionPlugin = {
    install: function (v, options) {
        v.use(PopupPlugin);
        v.use(I18nPlugin);
        v.use(IconButtonPlugin);
        v.use(IconPlugin);
        v.component(OPTION_ITEM_NAME, MOptionItem);
        v.component(OPTION_ITEM_ARCHIVE_NAME, MOptionItemArchive);
        v.component(OPTION_ITEM_ADD_NAME, MOptionItemAdd);
        v.component(OPTION_ITEM_DELETE_NAME, MOptionItemDelete);
        v.component(OPTION_ITEM_EDIT_NAME, MOptionItemEdit);
        v.component(OPTION_NAME, MOption);
    }
};
export default OptionPlugin;
//# sourceMappingURL=option.js.map