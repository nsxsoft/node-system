var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import ElementQueries from 'css-element-queries/src/ElementQueries';
import Component from 'vue-class-component';
import { Prop, Watch } from 'vue-property-decorator';
import { TransitionAccordion } from '../../mixins/transition-accordion/transition-accordion';
import { ModulVue } from '../../utils/vue/vue';
import { STEP_NAME } from '../component-names';
import IconPlugin from '../icon/icon';
import LinkPlugin from '../link/link';
import WithRender from './step.html?style=./step.scss';
export var MStepState;
(function (MStepState) {
    MStepState["Locked"] = "locked";
    MStepState["InProgress"] = "in-progress";
    MStepState["Success"] = "success";
    MStepState["Warning"] = "warning";
    MStepState["Error"] = "error";
})(MStepState || (MStepState = {}));
export var MStepMode;
(function (MStepMode) {
    MStepMode["Default"] = "default";
    MStepMode["Accordion"] = "accordion";
})(MStepMode || (MStepMode = {}));
var MStep = /** @class */ (function (_super) {
    __extends(MStep, _super);
    function MStep() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.internalOpen = false;
        _this.internalMode = MStepMode.Default;
        return _this;
    }
    MStep.prototype.openChanged = function (open) {
        this.as().accordionAnim = true;
        this.propOpen = open;
    };
    MStep.prototype.mounted = function () {
        this.propOpen = this.open;
        ElementQueries.init();
    };
    MStep.prototype.beforeDestroy = function () {
        ElementQueries.detach(this.$el);
    };
    MStep.prototype.openStep = function (event) {
        if (this.propMode === MStepMode.Accordion) {
            this.as().accordionAnim = true;
            this.propOpen = !this.propOpen;
            this.$emit('open');
            event.currentTarget.blur();
        }
        else {
            if (!this.propOpen) {
                this.as().accordionAnim = true;
                this.propOpen = true;
                this.$emit('open');
                event.currentTarget.blur();
            }
        }
    };
    MStep.prototype.getIcon = function () {
        var icon = '';
        switch (this.state) {
            case MStepState.Locked:
                icon = 'm-svg__close-clear';
                break;
            case MStepState.Success:
                icon = 'm-svg__completed-filled';
                break;
            case MStepState.Warning:
                icon = 'm-svg__warning-filled';
                break;
            case MStepState.Error:
                icon = 'm-svg__error-filled';
                break;
            default:
                break;
        }
        return icon;
    };
    Object.defineProperty(MStep.prototype, "propOpen", {
        get: function () {
            return this.internalOpen;
        },
        set: function (open) {
            this.internalOpen = open !== undefined ? open : false;
            if (this.internalOpen) {
                this.$emit('open');
            }
            else {
                this.$emit('close');
            }
            var refHeader = this.$refs.header;
            if (this.propMode === MStepMode.Accordion) {
                if (!refHeader.hasAttribute('tabindex')) {
                    refHeader.setAttribute('tabindex', '0');
                }
            }
            else {
                if (this.propOpen) {
                    if (refHeader.hasAttribute('tabindex')) {
                        refHeader.removeAttribute('tabindex');
                    }
                }
                else {
                    if (!refHeader.hasAttribute('tabindex')) {
                        refHeader.setAttribute('tabindex', '0');
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MStep.prototype, "propMode", {
        get: function () {
            return this.mode === MStepMode.Accordion ? this.mode : MStepMode.Default;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Prop()
    ], MStep.prototype, "state", void 0);
    __decorate([
        Prop({ default: MStepMode.Default })
    ], MStep.prototype, "mode", void 0);
    __decorate([
        Prop()
    ], MStep.prototype, "open", void 0);
    __decorate([
        Prop()
    ], MStep.prototype, "required", void 0);
    __decorate([
        Prop({ default: 'm-svg__close-clear' })
    ], MStep.prototype, "iconName", void 0);
    __decorate([
        Prop()
    ], MStep.prototype, "last", void 0);
    __decorate([
        Watch('open')
    ], MStep.prototype, "openChanged", null);
    MStep = __decorate([
        WithRender,
        Component({
            mixins: [
                TransitionAccordion
            ]
        })
    ], MStep);
    return MStep;
}(ModulVue));
export { MStep };
var StepPlugin = {
    install: function (v, options) {
        v.prototype.$log.error('MStep will be deprecated in modul v.1.0');
        v.use(IconPlugin);
        v.use(LinkPlugin);
        v.component(STEP_NAME, MStep);
    }
};
export default StepPlugin;
//# sourceMappingURL=step.js.map