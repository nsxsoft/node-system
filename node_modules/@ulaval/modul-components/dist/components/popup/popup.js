var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Component from 'vue-class-component';
import { Emit, Prop } from 'vue-property-decorator';
import { MediaQueries } from '../../mixins/media-queries/media-queries';
import { MOpenTrigger, OpenTrigger } from '../../mixins/open-trigger/open-trigger';
import { ModulVue } from '../../utils/vue/vue';
import { POPUP_NAME } from '../component-names';
import PopperPlugin, { MPopperPlacement } from '../popper/popper';
import SidebarPlugin from '../sidebar/sidebar';
import WithRender from './popup.html?style=./popup.scss';
var MPopup = /** @class */ (function (_super) {
    __extends(MPopup, _super);
    function MPopup() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.internalOpen = false;
        return _this;
    }
    Object.defineProperty(MPopup.prototype, "popupBody", {
        get: function () {
            return this.$children[0].popupBody;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MPopup.prototype, "propOpen", {
        get: function () {
            return this.open === undefined ? this.internalOpen : this.open;
        },
        set: function (value) {
            if (!this.disabled) {
                this.internalOpen = value;
                this.$emit('update:open', value);
            }
        },
        enumerable: true,
        configurable: true
    });
    MPopup.prototype.onOpen = function () { };
    MPopup.prototype.onClose = function () { };
    Object.defineProperty(MPopup.prototype, "propOpenTrigger", {
        get: function () {
            return this.openTrigger; // todo: mobile + hover ??
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MPopup.prototype, "propTrigger", {
        get: function () {
            return this.trigger || this.as().triggerHook || undefined;
        },
        enumerable: true,
        configurable: true
    });
    MPopup.prototype.onPortalContentMounted = function () {
        this.$emit('portal-content-mounted');
    };
    MPopup.prototype.onPortalContentVisible = function () {
        this.$emit('portal-content-visible');
    };
    Object.defineProperty(MPopup.prototype, "hasTriggerSlot", {
        get: function () {
            return !!this.$slots.trigger;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Prop()
    ], MPopup.prototype, "open", void 0);
    __decorate([
        Prop({ default: MPopperPlacement.Bottom })
    ], MPopup.prototype, "placement", void 0);
    __decorate([
        Prop({ default: MOpenTrigger.Click })
    ], MPopup.prototype, "openTrigger", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "closeOnBackdrop", void 0);
    __decorate([
        Prop({ default: true })
    ], MPopup.prototype, "focusManagement", void 0);
    __decorate([
        Prop({ default: 'auto' })
    ], MPopup.prototype, "width", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "id", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "disabled", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "shadow", void 0);
    __decorate([
        Prop({ default: true })
    ], MPopup.prototype, "padding", void 0);
    __decorate([
        Prop({ default: true })
    ], MPopup.prototype, "paddingHeader", void 0);
    __decorate([
        Prop({ default: true })
    ], MPopup.prototype, "paddingBody", void 0);
    __decorate([
        Prop({ default: true })
    ], MPopup.prototype, "paddingFooter", void 0);
    __decorate([
        Prop({ default: true })
    ], MPopup.prototype, "background", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "beforeEnter", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "enter", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "afterEnter", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "enterCancelled", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "beforeLeave", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "leave", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "afterLeave", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "leaveCancelled", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "desktopOnly", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "className", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "preload", void 0);
    __decorate([
        Prop()
    ], MPopup.prototype, "trigger", void 0);
    __decorate([
        Prop({ default: true })
    ], MPopup.prototype, "lazy", void 0);
    __decorate([
        Emit('open')
    ], MPopup.prototype, "onOpen", null);
    __decorate([
        Emit('close')
    ], MPopup.prototype, "onClose", null);
    MPopup = __decorate([
        WithRender,
        Component({
            mixins: [MediaQueries, OpenTrigger]
        })
    ], MPopup);
    return MPopup;
}(ModulVue));
export { MPopup };
var PopupPlugin = {
    install: function (v, options) {
        v.use(PopperPlugin);
        v.use(SidebarPlugin);
        v.component(POPUP_NAME, MPopup);
    }
};
export default PopupPlugin;
//# sourceMappingURL=popup.js.map