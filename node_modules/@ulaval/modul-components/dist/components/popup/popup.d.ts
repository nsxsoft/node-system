import { PluginObject } from 'vue';
import { MOpenTrigger } from '../../mixins/open-trigger/open-trigger';
import { ModulVue } from '../../utils/vue/vue';
import { MPopper, MPopperPlacement } from '../popper/popper';
export declare class MPopup extends ModulVue {
    open: boolean;
    placement: MPopperPlacement;
    openTrigger: MOpenTrigger;
    closeOnBackdrop: boolean;
    focusManagement: boolean;
    width: string;
    id: string;
    disabled: boolean;
    shadow: boolean;
    padding: boolean;
    paddingHeader: boolean;
    paddingBody: boolean;
    paddingFooter: boolean;
    background: boolean;
    beforeEnter: any;
    enter: any;
    afterEnter: any;
    enterCancelled: any;
    beforeLeave: any;
    leave: any;
    afterLeave: any;
    leaveCancelled: any;
    desktopOnly: boolean;
    className: string;
    preload: boolean;
    trigger: HTMLElement;
    lazy: boolean;
    $refs: {
        popper: MPopper;
    };
    private internalOpen;
    readonly popupBody: Element;
    private propOpen;
    private onOpen;
    private onClose;
    readonly propOpenTrigger: MOpenTrigger;
    readonly propTrigger: HTMLElement;
    private onPortalContentMounted;
    private onPortalContentVisible;
    private readonly hasTriggerSlot;
}
declare const PopupPlugin: PluginObject<any>;
export default PopupPlugin;
//# sourceMappingURL=popup.d.ts.map