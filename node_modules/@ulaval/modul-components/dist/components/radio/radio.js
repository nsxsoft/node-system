var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Component from 'vue-class-component';
import { Emit, Model, Prop } from 'vue-property-decorator';
import { InputState } from '../../mixins/input-state/input-state';
import uuid from '../../utils/uuid/uuid';
import { ModulVue } from '../../utils/vue/vue';
import { RADIO_NAME } from '../component-names';
import IconPlugin from '../icon/icon';
import WithRender from './radio.html?style=./radio.scss';
export var MRadioPosition;
(function (MRadioPosition) {
    MRadioPosition["Left"] = "left";
    MRadioPosition["Right"] = "right";
})(MRadioPosition || (MRadioPosition = {}));
export var MRadioVerticalAlignement;
(function (MRadioVerticalAlignement) {
    MRadioVerticalAlignement["Center"] = "center";
    MRadioVerticalAlignement["Top"] = "top";
})(MRadioVerticalAlignement || (MRadioVerticalAlignement = {}));
var BaseRadioGroup = /** @class */ (function (_super) {
    __extends(BaseRadioGroup, _super);
    function BaseRadioGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BaseRadioGroup;
}(ModulVue));
export { BaseRadioGroup };
var BaseButtonGroup = /** @class */ (function (_super) {
    __extends(BaseButtonGroup, _super);
    function BaseButtonGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return BaseButtonGroup;
}(BaseRadioGroup));
export { BaseButtonGroup };
var MRadio = /** @class */ (function (_super) {
    __extends(MRadio, _super);
    function MRadio() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // ---------------------------
        _this.radioID = uuid.generate();
        _this.hasFocus = false;
        _this.hasParentGroup = undefined;
        _this.internalDisabled = false;
        return _this;
    }
    MRadio.prototype.onChange = function (value) { };
    Object.defineProperty(MRadio.prototype, "propPosition", {
        get: function () {
            return this.isGroup() ? this.parentGroup.radiosPosition : this.radioPosition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MRadio.prototype, "propVerticalAlign", {
        get: function () {
            return this.isGroup() ? this.parentGroup.radiosVerticalAlign : this.radioVerticalAlign;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MRadio.prototype, "propRadioMarginTop", {
        get: function () {
            return this.isGroup() ? this.parentGroup.radiosMarginTop : this.radioMarginTop;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MRadio.prototype, "propDisabled", {
        get: function () {
            var groupDisabled = this.isGroup() ? this.parentGroup.stateIsDisabled : false;
            return groupDisabled || this.as().isDisabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MRadio.prototype, "propError", {
        get: function () {
            var groupHasError = this.isGroup() ? this.parentGroup.stateIsError : false;
            return groupHasError || this.as().hasError;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MRadio.prototype, "propValid", {
        get: function () {
            var groupValid = this.isGroup() ? this.parentGroup.stateIsValid : false;
            return groupValid || this.as().isValid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MRadio.prototype, "propName", {
        get: function () {
            return this.isGroup() ? this.parentGroup.name : this.name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MRadio.prototype, "propInline", {
        get: function () {
            return this.isGroup() ? this.parentGroup.inline : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MRadio.prototype, "propFullSize", {
        get: function () {
            return this.isGroup() ? this.parentGroup.fullSize : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MRadio.prototype, "model", {
        get: function () {
            return this.isGroup() ? this.parentGroup.getValue() : this.modelValue;
        },
        set: function (value) {
            if (this.isGroup()) {
                this.parentGroup.updateValue(value);
            }
            else {
                this.onChange(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MRadio.prototype, "propReadOnly", {
        get: function () {
            if (this.readOnly !== undefined) {
                return this.readOnly;
            }
            else {
                return this.isGroup() ? this.parentGroup.readOnly : false;
            }
        },
        enumerable: true,
        configurable: true
    });
    MRadio.prototype.isGroup = function () {
        if (this.hasParentGroup === undefined) {
            var parentGroup = void 0;
            parentGroup = this.getParent(function (p) { return p instanceof BaseRadioGroup || p instanceof BaseButtonGroup || // these will fail with Jest, but should pass in prod mode
                p.$options.name === 'MRadioGroup' || p.$options.name === 'MButtonGroup'; } // these are necessary for Jest, but the first two should pass in prod mode
            );
            if (parentGroup) {
                this.parentGroup = parentGroup;
                this.hasParentGroup = true;
            }
            else {
                this.hasParentGroup = false;
            }
        }
        return !!this.hasParentGroup;
    };
    MRadio.prototype.isButton = function () {
        return this.isGroup() && this.parentGroup instanceof BaseButtonGroup;
    };
    MRadio.prototype.onFocus = function (event) {
        if (this.isGroup()) {
            this.parentGroup.onFocus(event);
        }
        this.hasFocus = true;
    };
    MRadio.prototype.onBlur = function (event) {
        if (this.isGroup()) {
            this.parentGroup.onBlur(event);
        }
        this.hasFocus = false;
    };
    MRadio.prototype.hasIcon = function () {
        return !!this.iconName;
    };
    MRadio.prototype.hasIconLeft = function () {
        return this.iconPosition === MRadioPosition.Left;
    };
    __decorate([
        Prop(),
        Model('change')
    ], MRadio.prototype, "modelValue", void 0);
    __decorate([
        Prop()
    ], MRadio.prototype, "value", void 0);
    __decorate([
        Prop()
    ], MRadio.prototype, "name", void 0);
    __decorate([
        Prop({
            default: MRadioPosition.Left,
            validator: function (value) {
                return value === MRadioPosition.Left ||
                    value === MRadioPosition.Right;
            }
        })
    ], MRadio.prototype, "radioPosition", void 0);
    __decorate([
        Prop()
    ], MRadio.prototype, "disabled", void 0);
    __decorate([
        Prop({
            default: MRadioVerticalAlignement.Top,
            validator: function (value) {
                return value === MRadioVerticalAlignement.Top ||
                    value === MRadioVerticalAlignement.Center;
            }
        })
    ], MRadio.prototype, "radioVerticalAlign", void 0);
    __decorate([
        Prop()
    ], MRadio.prototype, "radioMarginTop", void 0);
    __decorate([
        Prop()
    ], MRadio.prototype, "readOnly", void 0);
    __decorate([
        Prop()
    ], MRadio.prototype, "iconName", void 0);
    __decorate([
        Prop({
            default: MRadioPosition.Left,
            validator: function (value) {
                return value === MRadioPosition.Left ||
                    value === MRadioPosition.Right;
            }
        })
    ], MRadio.prototype, "iconPosition", void 0);
    __decorate([
        Emit('change')
    ], MRadio.prototype, "onChange", null);
    __decorate([
        Emit('focus')
    ], MRadio.prototype, "onFocus", null);
    __decorate([
        Emit('blur')
    ], MRadio.prototype, "onBlur", null);
    MRadio = __decorate([
        WithRender,
        Component({
            mixins: [InputState]
        })
    ], MRadio);
    return MRadio;
}(ModulVue));
export { MRadio };
var RadioPlugin = {
    install: function (v, options) {
        v.use(IconPlugin);
        v.component(RADIO_NAME, MRadio);
    }
};
export default RadioPlugin;
//# sourceMappingURL=radio.js.map