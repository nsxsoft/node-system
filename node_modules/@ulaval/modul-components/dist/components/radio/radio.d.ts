import { PluginObject } from 'vue';
import { ModulVue } from '../../utils/vue/vue';
export declare enum MRadioPosition {
    Left = "left",
    Right = "right"
}
export declare enum MRadioVerticalAlignement {
    Center = "center",
    Top = "top"
}
export interface RadioGroup {
    name: string;
    stateIsDisabled: boolean;
    stateIsError: boolean;
    stateIsValid: boolean;
    radiosPosition: MRadioPosition;
    inline: boolean;
    radiosVerticalAlign: MRadioVerticalAlignement;
    radiosMarginTop: string;
    readOnly: boolean;
    onFocus(event: Event): void;
    onBlur(event: Event): void;
    getValue(): string;
    updateValue(value: string): void;
}
export interface ButtonGroup extends RadioGroup {
    fullSize: boolean;
}
export declare abstract class BaseRadioGroup extends ModulVue {
}
export declare abstract class BaseButtonGroup extends BaseRadioGroup {
}
export declare class MRadio extends ModulVue {
    modelValue: string;
    value: string;
    name: string;
    radioPosition: MRadioPosition;
    disabled: boolean;
    radioVerticalAlign: MRadioVerticalAlignement;
    radioMarginTop: string;
    readOnly: boolean;
    iconName: string;
    iconPosition: MRadioPosition;
    radioID: string;
    private hasFocus;
    private hasParentGroup;
    private parentGroup;
    private internalDisabled;
    onChange(value: any): void;
    readonly propPosition: MRadioPosition;
    readonly propVerticalAlign: MRadioVerticalAlignement;
    readonly propRadioMarginTop: string;
    readonly propDisabled: boolean;
    readonly propError: boolean;
    readonly propValid: boolean;
    readonly propName: string;
    readonly propInline: boolean;
    readonly propFullSize: boolean;
    protected model: string;
    readonly propReadOnly: boolean;
    private isGroup;
    private isButton;
    private onFocus;
    private onBlur;
    private hasIcon;
    private hasIconLeft;
}
declare const RadioPlugin: PluginObject<any>;
export default RadioPlugin;
//# sourceMappingURL=radio.d.ts.map