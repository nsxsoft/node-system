import { PluginObject } from 'vue';
import { ModulVue } from '../../utils/vue/vue';
import { DatePickerSupportedTypes } from '../datepicker/datepicker';
export declare class MDateRange {
    from: DatePickerSupportedTypes;
    to: DatePickerSupportedTypes;
}
interface MPeriodpickerFromProps {
    value: DatePickerSupportedTypes;
    min: DatePickerSupportedTypes;
    max: DatePickerSupportedTypes;
    disabled: boolean;
    waiting: boolean;
    error: boolean;
    valid: boolean;
    readonly: boolean;
}
interface MPeriodpickerFromHandlers {
    change(newValue: DatePickerSupportedTypes): void;
    open(): void;
}
export interface MPeriodpickerFromComponentVue extends MPeriodpickerFromProps, MPeriodpickerFromHandlers {
}
interface MPeriodpickerToProps {
    focus: boolean;
    value: DatePickerSupportedTypes;
    min: DatePickerSupportedTypes;
    max: DatePickerSupportedTypes;
    disabled: boolean;
    waiting: boolean;
    error: boolean;
    valid: boolean;
    readonly: boolean;
}
interface MPeriodpickerToHandlers {
    change(newValue: DatePickerSupportedTypes): void;
    close(): void;
}
export interface MPeriodpickerToComponentVue extends MPeriodpickerToProps, MPeriodpickerToHandlers {
}
export interface MPeriodpickerFromSlotProps {
    props: MPeriodpickerFromProps;
    handlers: MPeriodpickerFromHandlers;
}
export interface MPeriodpickerToSlotProps {
    props: MPeriodpickerToProps;
    handlers: MPeriodpickerToHandlers;
}
export interface MPeriodpickerProps {
    value: MDateRange;
    min: DatePickerSupportedTypes;
    max: DatePickerSupportedTypes;
}
export declare class MPeriodpicker extends ModulVue implements MPeriodpickerProps {
    value: MDateRange;
    min: DatePickerSupportedTypes;
    max: DatePickerSupportedTypes;
    toIsFocused: boolean;
    readonly firstInputState: MPeriodpickerFromSlotProps;
    readonly secondInputState: MPeriodpickerToSlotProps;
    readonly internalValue: MDateRange;
    readonly minDateTo: DatePickerSupportedTypes;
    readonly hasTextfieldError: boolean;
    readonly isTextfieldValid: boolean;
    onDateFromChange(newValue: DatePickerSupportedTypes): void;
    onDateToChange(newValue: DatePickerSupportedTypes): void;
    emitNewValue(newValue: MDateRange): void;
    onDateFromOpen(): void;
    onDateToClose(): void;
    unfocusDateToField(): void;
    getNewModelValue(newValue: DatePickerSupportedTypes, endOfDay?: boolean): DatePickerSupportedTypes;
}
declare const PeriodpickerPlugin: PluginObject<any>;
export default PeriodpickerPlugin;
//# sourceMappingURL=periodpicker.d.ts.map