var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Vue from 'vue';
import Component from 'vue-class-component';
export var MOpenTrigger;
(function (MOpenTrigger) {
    MOpenTrigger["Hover"] = "hover";
    MOpenTrigger["Click"] = "click";
    MOpenTrigger["Manual"] = "manual";
    MOpenTrigger["MouseDown"] = "mousedown";
})(MOpenTrigger || (MOpenTrigger = {}));
var OpenTrigger = /** @class */ (function (_super) {
    __extends(OpenTrigger, _super);
    function OpenTrigger() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // should be initialized for reactivity (use of null instead of dummy class)
        // tslint:disable-next-line:no-null-keyword
        _this.internalTriggerHook = null;
        return _this;
    }
    Object.defineProperty(OpenTrigger.prototype, "triggerHook", {
        get: function () {
            return this.internalTriggerHook === null ? undefined : this.internalTriggerHook;
        },
        set: function (value) {
            this.internalTriggerHook = value;
        },
        enumerable: true,
        configurable: true
    });
    OpenTrigger = __decorate([
        Component
    ], OpenTrigger);
    return OpenTrigger;
}(Vue));
export { OpenTrigger };
//# sourceMappingURL=open-trigger.js.map