import { ModulVue } from '../../utils/vue/vue';
export interface InputManagementProps {
    value: string;
    placeholder: string;
    readonly: boolean;
    focus: boolean;
}
export interface InputManagementData {
    internalValue: string;
}
export interface InputManagementFocusable {
    focusInput(): void;
}
export declare enum InputManagementAutocomplete {
    Off = "off",
    On = "on"
}
export declare class InputManagement extends ModulVue implements InputManagementProps, InputManagementData, InputManagementFocusable {
    value: string;
    placeholder: string;
    readonly: boolean;
    autocomplete: string;
    focus: boolean;
    trimWordWrap: boolean;
    internalValue: string;
    private internalIsFocus;
    focusInput(): void;
    readonly hasValue: boolean;
    private beforeMount;
    private mounted;
    private focusChanged;
    private onClick;
    private onFocus;
    private onBlur;
    private onKeyup;
    private onKeydown;
    private onChange;
    private onPaste;
    private getTrimValue;
    private onValueChange;
    private model;
    private readonly isEmpty;
    private readonly isFocus;
}
//# sourceMappingURL=input-management.d.ts.map