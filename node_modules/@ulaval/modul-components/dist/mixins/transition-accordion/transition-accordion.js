var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Vue from 'vue';
import Component from 'vue-class-component';
var ACCORDION_STYLE_TRANSITION = 'max-height 0.3s ease';
var TransitionAccordion = /** @class */ (function (_super) {
    __extends(TransitionAccordion, _super);
    function TransitionAccordion() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TransitionAccordion.prototype.setTransitionStart = function (el) {
        // tslint:disable-next-line: deprecation
        el.style.webkitTransition = ACCORDION_STYLE_TRANSITION;
        el.style.transition = ACCORDION_STYLE_TRANSITION;
        el.style.height = 'auto';
        el.style.overflow = 'hidden';
    };
    TransitionAccordion.prototype.accordionEnter = function (el, done) {
        var _this = this;
        this.$nextTick(function () {
            if (_this.accordionAnim || _this.accordionAnim === undefined) {
                var height_1 = el.clientHeight;
                el.style.maxHeight = '0';
                _this.setTransitionStart(el);
                setTimeout(function () {
                    el.style.maxHeight = height_1 + 'px';
                    done();
                }, 50);
            }
            else {
                done();
            }
        });
    };
    TransitionAccordion.prototype.accordionAfterEnter = function (el) {
        if (this.accordionAnim || this.accordionAnim === undefined) {
            setTimeout(function () {
                el.style.removeProperty('max-height');
                el.style.removeProperty('overflow');
            }, 300);
        }
    };
    TransitionAccordion.prototype.accordionLeave = function (el, done) {
        var _this = this;
        this.$nextTick(function () {
            if (_this.accordionAnim || _this.accordionAnim === undefined) {
                var height = el.clientHeight;
                el.style.maxHeight = height + 'px';
                _this.setTransitionStart(el);
                setTimeout(function () {
                    el.style.maxHeight = '0';
                    setTimeout(function () {
                        done();
                    }, 300);
                }, 50);
            }
            else {
                done();
            }
        });
    };
    TransitionAccordion = __decorate([
        Component
    ], TransitionAccordion);
    return TransitionAccordion;
}(Vue));
export { TransitionAccordion };
//# sourceMappingURL=transition-accordion.js.map