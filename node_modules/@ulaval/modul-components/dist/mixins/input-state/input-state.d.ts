import { ModulVue } from '../../utils/vue/vue';
export declare enum InputStateValue {
    Default = "default",
    Disabled = "disabled",
    Waiting = "waiting",
    Error = "error",
    Valid = "valid"
}
export declare enum InputStateTagStyle {
    Default = "default",
    H1 = "h1",
    H2 = "h2",
    H3 = "h3",
    H4 = "h4",
    H5 = "h5",
    H6 = "h6",
    P = "p"
}
export interface InputStateMixin {
    active: boolean;
    isDisabled: boolean;
    isWaiting: boolean;
    hasError: boolean;
    isValid: boolean;
    state: string;
    hasErrorMessage: boolean;
    hasValidMessage: boolean;
    hasHelperMessage: boolean;
    hasValidationMessage: boolean;
    helperMessage: string;
    validMessage: string;
    errorMessage: string;
    readonly: boolean;
    disabled: boolean;
    getInput(): HTMLElement | undefined;
}
export interface InputStateInputSelector {
    selector: string;
}
export declare class InputState extends ModulVue implements InputStateMixin {
    disabled: boolean;
    waiting: boolean;
    error: boolean;
    valid: boolean;
    errorMessage: string;
    validMessage: string;
    helperMessage: string;
    tagStyle: string;
    readonly: boolean;
    readonly active: boolean;
    readonly isDisabled: boolean;
    readonly isWaiting: boolean;
    readonly hasError: boolean;
    readonly isValid: boolean;
    readonly state: InputStateValue;
    readonly hasErrorMessage: boolean;
    readonly hasValidMessage: boolean;
    readonly hasHelperMessage: boolean;
    readonly hasValidationMessage: boolean;
    getInput(): HTMLElement | undefined;
}
//# sourceMappingURL=input-state.d.ts.map