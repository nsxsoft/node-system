var MetaV2 = /** @class */ (function () {
    function MetaV2(_meta) {
        this._meta = _meta;
    }
    Object.defineProperty(MetaV2.prototype, "meta", {
        get: function () {
            return this._meta;
        },
        enumerable: true,
        configurable: true
    });
    MetaV2.prototype.findMetaComponentByComponentName = function (componentName) {
        var component = this._meta.components.find(function (metaComponent) {
            return metaComponent.componentName.toLowerCase() === componentName.toLowerCase();
        });
        if (component) {
            return component;
        }
        throw new Error("Unable to find component with name " + componentName + " in meta");
    };
    MetaV2.prototype.findMetaComponentByTagName = function (tagName) {
        var _this = this;
        // a tag name is in Pascal case
        var component = this._meta.components.find(function (metaComponent) {
            return _this.camelToKebab(metaComponent.componentName) === tagName;
        });
        if (component) {
            return component;
        }
        throw new Error("Unable to find component with tagName " + tagName + " in meta");
    };
    MetaV2.prototype.camelToKebab = function (camelString) {
        return camelString.replace(/([a-zA-Z0-9])([A-Z])/g, '$1-$2').toLowerCase();
    };
    return MetaV2;
}());
export { MetaV2 };
//# sourceMappingURL=meta-v2.js.map