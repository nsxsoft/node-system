import { RIPPLE_EFFECT_NAME } from '../directive-names';
import RippleEffect from './ripple-effect-lib';
var MOUSE_DOWN_MODIFIER = 'ripple-effect_mouse-down';
var MRippleEffect = {
    bind: function (element, binding) {
        RippleEffect.isActive = binding.value === undefined ? false : binding.value;
        element.style.overflow = 'hidden';
        if (element) {
            binding.listener = function (event) {
                RippleEffect.initRipple(event, element);
            };
            element.addEventListener('mousedown', binding.listener);
        }
    },
    componentUpdated: function (element, binding) {
        RippleEffect.isActive = binding.value === undefined ? false : binding.value;
    },
    unbind: function (element, binding) {
        if (element && binding.listener) {
            element.removeEventListener('mousedown', binding.listener);
        }
    }
};
var RippleEffectPlugin = {
    install: function (v, options) {
        v.prototype.$log.error('RippleEffectBinding will be deprecated in modul v.1.0');
        v.directive(RIPPLE_EFFECT_NAME, MRippleEffect);
    }
};
export default RippleEffectPlugin;
//# sourceMappingURL=ripple-effect.js.map