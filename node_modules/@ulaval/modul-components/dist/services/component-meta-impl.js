var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import Vue from 'vue';
import Component from 'vue-class-component';
// TODO-remove mixin test
var ServiceMixin = /** @class */ (function (_super) {
    __extends(ServiceMixin, _super);
    function ServiceMixin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ServiceMixin.prototype.beforeCreate = function () {
        // Vue.prototype.$log.log('before create mixin');
        var options = this.$options;
        options.$serviceMixin = this;
    };
    ServiceMixin.prototype.log = function (s) {
        // Vue.prototype.$log.log(s);
    };
    ServiceMixin = __decorate([
        Component
    ], ServiceMixin);
    return ServiceMixin;
}(Vue));
export { ServiceMixin };
var GlobalMixin = /** @class */ (function (_super) {
    __extends(GlobalMixin, _super);
    function GlobalMixin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GlobalMixin.prototype.beforeCreate = function () {
        // Vue.prototype.$log.log('before create global mixin');
        // Vue.prototype.$log.log(this.$options);
        this.$options.$aaa = '?';
        this.$globalMixin = 'zz';
    };
    return GlobalMixin;
}(Vue));
var f1 = function (s) {
    // Vue.prototype.$log.log('f1', s);
};
var f2 = function (s) {
    // Vue.prototype.$log.log('f2', s);
};
var f3 = function (s) {
    // Vue.prototype.$log.log('f3', s);
};
var ComponentMetaService = {
    install: function (v, options) {
        v.$globalF1 = f1;
        (v.prototype).$aa = 'aa';
        v.mixin(new GlobalMixin());
        (v.prototype).$globalF2 = f2;
    }
};
export default ComponentMetaService;
//# sourceMappingURL=component-meta-impl.js.map