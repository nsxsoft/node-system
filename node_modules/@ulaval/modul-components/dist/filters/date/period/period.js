import Vue from 'vue';
import { FormatMode } from '../../../utils/i18n/i18n';
import ModulDate, { DatePrecision } from '../../../utils/modul-date/modul-date';
import { dateFilter } from '../date/date';
export var PeriodFilterMode;
(function (PeriodFilterMode) {
    PeriodFilterMode["FULLMODE"] = "full";
    PeriodFilterMode["COMPACTMODE"] = "compact";
})(PeriodFilterMode || (PeriodFilterMode = {}));
var PeriodFilter = /** @class */ (function () {
    function PeriodFilter() {
    }
    PeriodFilter.formatPeriod = function (period, params) {
        if (params === void 0) { params = { mode: PeriodFilterMode.COMPACTMODE }; }
        var formattedPeriod;
        if (params.mode === PeriodFilterMode.FULLMODE && period.start && period.end) {
            formattedPeriod = PeriodFilter.fullStartAndEndDate(period.start, period.end);
        }
        else if (period.start && period.end) {
            formattedPeriod = PeriodFilter.compactStartAndEndDate(period.start, period.end);
        }
        else if (period.start && !period.end) {
            formattedPeriod = PeriodFilter.onlyStartDate(period.start);
        }
        else if (period.end && !period.start) {
            formattedPeriod = PeriodFilter.onlyEndDate(period.end);
        }
        else {
            throw new Error('Period must have at least one Date');
        }
        return formattedPeriod;
    };
    PeriodFilter.compactStartAndEndDate = function (start, end) {
        var startDate = new ModulDate(start);
        var endDate = new ModulDate(end);
        var formattedPeriod;
        if (startDate.isSame(endDate, DatePrecision.DAY)) {
            var startFormatted = dateFilter(start);
            formattedPeriod = this.translateDate('f-m-period:sameDay', { date: startFormatted });
        }
        else if (startDate.isSame(endDate, DatePrecision.MONTH)) {
            formattedPeriod = this.startAndEndDateSameMonth(start, end);
        }
        else if (startDate.isSame(endDate, DatePrecision.YEAR)) {
            formattedPeriod = this.startAndEndDateSameYear(start, end);
        }
        else {
            formattedPeriod = this.fullStartAndEndDate(start, end);
        }
        return formattedPeriod;
    };
    PeriodFilter.onlyStartDate = function (start) {
        var startFormatted = dateFilter(start);
        return this.translateDate('f-m-period:start', { start: startFormatted });
    };
    PeriodFilter.onlyEndDate = function (end) {
        var endFormatted = dateFilter(end);
        return this.translateDate('f-m-period:end', { end: endFormatted });
    };
    PeriodFilter.startAndEndDateSameMonth = function (start, end) {
        var startFormatted = dateFilter(start, { showMonth: false, showYear: false });
        var endFormatted = dateFilter(end);
        var params = {
            start: startFormatted,
            end: endFormatted
        };
        return this.translateDate('f-m-period:dates', params);
    };
    PeriodFilter.startAndEndDateSameYear = function (start, end) {
        var startFormatted = dateFilter(start, { showYear: false });
        var endFormatted = dateFilter(end);
        var params = {
            start: startFormatted,
            end: endFormatted
        };
        return this.translateDate('f-m-period:dates', params);
    };
    PeriodFilter.fullStartAndEndDate = function (start, end) {
        var startFormatted = dateFilter(start);
        var endFormatted = dateFilter(end);
        var params = {
            start: startFormatted,
            end: endFormatted
        };
        return this.translateDate('f-m-period:dates', params);
    };
    PeriodFilter.translateDate = function (key, params) {
        return (Vue.prototype).$i18n.translate(key, params, 0, '', undefined, FormatMode.Vsprintf);
    };
    return PeriodFilter;
}());
export { PeriodFilter };
//# sourceMappingURL=period.js.map