import Vue from 'vue';
import { MDialog } from '../../components/dialog/dialog';
var AlertInstance = undefined;
export var alertFunction = function (message, options) {
    if (!AlertInstance) {
        AlertInstance = new MDialog({
            el: document.createElement('div')
        });
        document.body.appendChild(AlertInstance.$el);
    }
    AlertInstance.message = message;
    AlertInstance.okLabel = options && options.okLabel ? options.okLabel : undefined;
    AlertInstance.negativeLink = false;
    return new Promise(function (resolve, reject) {
        var onOk = function () {
            if (AlertInstance) {
                unhook();
            }
            Vue.nextTick(function () {
                resolve();
            });
        };
        var hook = function () {
            if (AlertInstance) {
                AlertInstance.$on('ok', onOk);
                AlertInstance.$props['open'] = true;
            }
        };
        var unhook = function () {
            if (AlertInstance) {
                AlertInstance.$off('ok', onOk);
                AlertInstance.$props['open'] = false;
            }
        };
        if (AlertInstance) {
            AlertInstance.$nextTick(function () {
                hook();
            });
        }
        else {
            console.error('No instance of dialog');
            reject();
        }
    });
};
var AlertPlugin = {
    install: function (v, options) {
        v.prototype.$log.error('AlertPlugin will be deprecated in modul v.1.0');
        (v.prototype).$alert = alertFunction;
    }
};
export default AlertPlugin;
//# sourceMappingURL=alert.js.map