var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import Vue from 'vue';
import { MToast } from '../../components/toast/toast';
var TIME_BEFORE_ANIMATION_IS_OVER = 300;
var ToastService = /** @class */ (function () {
    function ToastService() {
        this.toasts = [];
        this.baseTopPosition = '0';
    }
    ToastService.prototype.show = function (params) {
        var toast = this.createToast(params);
        this.toasts.push(toast);
        if (this.activeToast) {
            this.activeToast.open = false;
            this.activeToast = this.toasts[1];
            this.toasts.splice(0, 1);
        }
        else {
            this.activeToast = this.toasts[0];
        }
    };
    ToastService.prototype.clear = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.activeToast) {
                    this.activeToast.open = false;
                }
                this.toasts = [];
                this.activeToast = undefined;
                return [2 /*return*/, new Promise(function (resolve) {
                        setTimeout(function () { return resolve(); }, TIME_BEFORE_ANIMATION_IS_OVER);
                    })];
            });
        });
    };
    ToastService.prototype.createToast = function (params) {
        var _a;
        var toast = new MToast({
            el: document.createElement('div'),
            propsData: (_a = {},
                _a['open.sync'] = true,
                _a.state = params.state,
                _a.position = params.position,
                _a.timeout = params.timeout,
                _a.actionLabel = params.actionLabel,
                _a.icon = params.icon,
                _a)
        });
        toast.$on('close', function () { return setTimeout(function () { return toast.$destroy(); }, TIME_BEFORE_ANIMATION_IS_OVER); });
        if (params.action) {
            toast.$on('action-button', function (event) {
                params.action(event);
            });
        }
        toast.offset = toast.isTop ? this.baseTopPosition : '0';
        if (params.text.charAt(0) === '<') {
            toast.$slots.default = [toast.$createElement(Vue.compile(params.text))];
        }
        else {
            toast.$slots.default = [toast.$createElement('p', params.text)];
        }
        return toast;
    };
    return ToastService;
}());
export { ToastService };
var ToastServicePlugin = {
    install: function (v) {
        var toast = new ToastService();
        (v.prototype).$toast = toast;
    }
};
export default ToastServicePlugin;
//# sourceMappingURL=toast-service.js.map