var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { MToastPosition, MToastState } from '../../../components/toast/toast';
import { FormatMode } from '../../../utils/i18n/i18n';
import { ModulVue } from '../../../utils/vue/vue';
export var MFormEvents;
(function (MFormEvents) {
    MFormEvents[MFormEvents["formErrorClear"] = 0] = "formErrorClear";
    MFormEvents[MFormEvents["formError"] = 1] = "formError";
})(MFormEvents || (MFormEvents = {}));
var MFormListener = /** @class */ (function () {
    function MFormListener(eventType, callback) {
        this.eventType = eventType;
        this.callback = callback;
    }
    return MFormListener;
}());
export { MFormListener };
var FormClearToastBehavior = /** @class */ (function (_super) {
    __extends(FormClearToastBehavior, _super);
    function FormClearToastBehavior() {
        return _super.call(this, MFormEvents.formErrorClear, function () {
            (ModulVue.prototype).$toast.clear();
        }) || this;
    }
    return FormClearToastBehavior;
}(MFormListener));
export { FormClearToastBehavior };
var FormErrorToastBehavior = /** @class */ (function (_super) {
    __extends(FormErrorToastBehavior, _super);
    function FormErrorToastBehavior() {
        return _super.call(this, MFormEvents.formError, function (params) {
            if (params && params.totalNbOfErrors && params.totalNbOfErrors > 1) {
                var htmlString = (ModulVue.prototype).$i18n.translate('m-form:multipleErrorsToCorrect', { totalNbOfErrors: params.totalNbOfErrors }, undefined, undefined, undefined, FormatMode.Sprintf);
                (ModulVue.prototype).$toast.show({
                    position: MToastPosition.TopCenter,
                    state: MToastState.Error,
                    text: "<p>" + htmlString + "</p>"
                });
            }
        }) || this;
    }
    return FormErrorToastBehavior;
}(MFormListener));
export { FormErrorToastBehavior };
var FormErrorFocusBehavior = /** @class */ (function (_super) {
    __extends(FormErrorFocusBehavior, _super);
    function FormErrorFocusBehavior() {
        return _super.call(this, MFormEvents.formError, function (params) {
            if (params && params.form) {
                params.form.focusFirstFieldWithError();
            }
        }) || this;
    }
    return FormErrorFocusBehavior;
}(MFormListener));
export { FormErrorFocusBehavior };
var FormErrorMessagesBehavior = /** @class */ (function (_super) {
    __extends(FormErrorMessagesBehavior, _super);
    function FormErrorMessagesBehavior() {
        return _super.call(this, MFormEvents.formError, function (params) {
            if (params && params.form && params.errorsToShowInMessagesCallback && (params.form.nbFieldsThatHasError > 1 || params.form.nbOfErrors > 0)) {
                params.errorsToShowInMessagesCallback(params.form.getErrorsForSummary());
            }
        }) || this;
    }
    return FormErrorMessagesBehavior;
}(MFormListener));
export { FormErrorMessagesBehavior };
var MFormService = /** @class */ (function () {
    function MFormService(listeners) {
        this._listeners = [];
        this._listeners = listeners;
    }
    Object.defineProperty(MFormService.prototype, "listeners", {
        get: function () {
            return this._listeners;
        },
        enumerable: true,
        configurable: true
    });
    return MFormService;
}());
export { MFormService };
//# sourceMappingURL=form-service.js.map