import { FormFieldValidation } from '../form-field-validation/form-field-validation';
export interface FormFieldOptions {
    messageAfterTouched?: boolean;
}
export declare type FieldValidationCallback<T> = (formField: FormField<T>) => FormFieldValidation;
/**
 * Form Field Class
 */
export declare class FormField<T> {
    accessCallback: () => T;
    validationCallback: FieldValidationCallback<T>[];
    private internalValue;
    private oldValue;
    private internalState;
    private messageAfterTouched;
    private touched;
    private shouldFocusInternal;
    private externalError;
    /**
     *
     * @param accessCallback function called to initialize the value of a field
     * @param validationCallback function called to validate
     * @param options options for the field
     */
    constructor(accessCallback: () => T, validationCallback?: FieldValidationCallback<T>[], options?: FormFieldOptions);
    /**
     * value of the field
     */
    /**
    * set the value of the field
    */
    value: T;
    /**
     * indicates if the field has error(s)
     */
    readonly hasError: boolean;
    /**
     * get external error
     */
    /**
    * set external error and trigger validation
    */
    ExternalError: string;
    /**
     * indicates if the field is touched
     */
    readonly isTouched: boolean;
    /**
     * if the field should focus
     */
    /**
    * set should focus on field
    */
    shouldFocus: boolean;
    /**
     * message to show under the form field
     */
    readonly errorMessage: string;
    /**
     * message to show in the error summary
     */
    readonly errorMessageSummary: string[];
    /**
     * execute validations
     */
    validate(): void;
    /**
     * mark the field as touched, reset external error and trigger validation
     */
    touch(): void;
    /**
     * reset the field without validating
     */
    reset(): void;
    /**
     * changes the value and execute validations
     * @param value the new value of the field
     */
    private change;
    private changeState;
}
//# sourceMappingURL=form-field.d.ts.map