{"remainingRequest":"/Users/cbacon/Develop/modul-typescript-template/node_modules/babel-loader/lib/index.js!/Users/cbacon/Develop/modul-typescript-template/node_modules/ts-loader/index.js??ref--11-2!/Users/cbacon/Develop/modul-typescript-template/src/todolist/model/todolist-repository-dummy.ts","dependencies":[{"path":"/Users/cbacon/Develop/modul-typescript-template/src/todolist/model/todolist-repository-dummy.ts","mtime":1552514191000},{"path":"/Users/cbacon/Develop/modul-typescript-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cbacon/Develop/modul-typescript-template/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cbacon/Develop/modul-typescript-template/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/cbacon/Develop/modul-typescript-template/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nexport var TodolistRepositoryDummy =\n/*#__PURE__*/\nfunction () {\n  function TodolistRepositoryDummy() {\n    _classCallCheck(this, TodolistRepositoryDummy);\n\n    this.dummyData = {\n      '1': {\n        todolistId: '1',\n        todolistName: 'Demo list 1'\n      },\n      '2': {\n        todolistId: '2',\n        todolistName: 'Demo list 2'\n      }\n    };\n  }\n\n  _createClass(TodolistRepositoryDummy, [{\n    key: \"loadTodolist\",\n    value: function loadTodolist(todolistId) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          var list = _this.dummyData[todolistId];\n\n          if (!list) {\n            reject(new Error(\"List \".concat(todolistId, \" does not exist.\")));\n          } else {\n            resolve(list);\n          }\n        }, 1000);\n      });\n    }\n  }, {\n    key: \"searchTodos\",\n    value: function () {\n      var _searchTodos = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(todolistId, lastTodolistId, pageSize) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", [{\n                  todoId: '1',\n                  todolistId: '1',\n                  title: 'My first todo!',\n                  description: 'Major refactoring task',\n                  dueDate: new Date(2019, 0, 1),\n                  status: 'in_progress'\n                }, {\n                  todoId: '2',\n                  todolistId: '1',\n                  title: 'Big job',\n                  description: 'Don\\'t forget about important stuff.',\n                  status: 'open'\n                }, {\n                  todoId: '3',\n                  todolistId: '1',\n                  title: 'Start project',\n                  description: '',\n                  status: 'done'\n                }, {\n                  todoId: '4',\n                  todolistId: '1',\n                  title: 'Translate project',\n                  description: '',\n                  status: 'wont_complete'\n                }].filter(function (todo) {\n                  return todo.todolistId === todolistId;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function searchTodos(_x, _x2, _x3) {\n        return _searchTodos.apply(this, arguments);\n      }\n\n      return searchTodos;\n    }()\n  }, {\n    key: \"addTodo\",\n    value: function addTodo(todo) {\n      throw new Error('Method not implemented.');\n    }\n  }, {\n    key: \"updateTodo\",\n    value: function updateTodo(todo) {\n      throw new Error('Method not implemented.');\n    }\n  }, {\n    key: \"deleteTodo\",\n    value: function deleteTodo(todo) {\n      throw new Error('Method not implemented.');\n    }\n  }]);\n\n  return TodolistRepositoryDummy;\n}();",{"version":3,"sources":["/Users/cbacon/Develop/modul-typescript-template/src/todolist/model/todolist-repository-dummy.ts"],"names":[],"mappings":";;;;;;;;;;;;AAGA,WAAa,uBAAb;AAAA;AAAA;AAAA,qCAAA;AAAA;;AACY,SAAA,SAAA,GAAuC;AAC3C,WAAK;AACD,QAAA,UAAU,EAAE,GADX;AAED,QAAA,YAAY,EAAE;AAFb,OADsC;AAK3C,WAAK;AACD,QAAA,UAAU,EAAE,GADX;AAED,QAAA,YAAY,EAAE;AAFb;AALsC,KAAvC;AAqEX;;AAtED;AAAA;AAAA,iCAYiB,UAZjB,EAYmC;AAAA;;AAC3B,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAe,MAAf,EAAoC;AACnD,QAAA,UAAU,CAAC,YAAK;AACZ,cAAM,IAAI,GAAa,KAAI,CAAC,SAAL,CAAe,UAAf,CAAvB;;AAEA,cAAI,CAAC,IAAL,EAAW;AACP,YAAA,MAAM,CAAC,IAAI,KAAJ,gBAAkB,UAAlB,sBAAD,CAAN;AACH,WAFD,MAEO;AACH,YAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,SARS,EAQP,IARO,CAAV;AASH,OAVM,CAAP;AAWH;AAxBL;AAAA;AAAA;AAAA;AAAA;AAAA,gDA0BsB,UA1BtB,EA0B0C,cA1B1C,EA0BmE,QA1BnE;AAAA;AAAA;AAAA;AAAA;AAAA,iDA2BgB,CACJ;AACI,kBAAA,MAAM,EAAE,GADZ;AAEI,kBAAA,UAAU,EAAE,GAFhB;AAGI,kBAAA,KAAK,EAAE,gBAHX;AAII,kBAAA,WAAW,EAAE,wBAJjB;AAKI,kBAAA,OAAO,EAAE,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CALb;AAMI,kBAAA,MAAM,EAAE;AANZ,iBADI,EASJ;AACI,kBAAA,MAAM,EAAE,GADZ;AAEI,kBAAA,UAAU,EAAE,GAFhB;AAGI,kBAAA,KAAK,EAAE,SAHX;AAII,kBAAA,WAAW,EAAE,sCAJjB;AAKI,kBAAA,MAAM,EAAE;AALZ,iBATI,EAgBJ;AACI,kBAAA,MAAM,EAAE,GADZ;AAEI,kBAAA,UAAU,EAAE,GAFhB;AAGI,kBAAA,KAAK,EAAE,eAHX;AAII,kBAAA,WAAW,EAAE,EAJjB;AAKI,kBAAA,MAAM,EAAE;AALZ,iBAhBI,EAuBJ;AACI,kBAAA,MAAM,EAAE,GADZ;AAEI,kBAAA,UAAU,EAAE,GAFhB;AAGI,kBAAA,KAAK,EAAE,mBAHX;AAII,kBAAA,WAAW,EAAE,EAJjB;AAKI,kBAAA,MAAM,EAAE;AALZ,iBAvBI,EA+BH,MA/BG,CA+BI,UAAC,IAAD;AAAA,yBAAgB,IAAI,CAAC,UAAL,KAAoB,UAApC;AAAA,iBA/BJ,CA3BhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BA6DY,IA7DZ,EA6DsB;AACd,YAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;AA/DL;AAAA;AAAA,+BAgEe,IAhEf,EAgEyB;AACjB,YAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;AAlEL;AAAA;AAAA,+BAmEe,IAnEf,EAmEyB;AACjB,YAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;AArEL;;AAAA;AAAA","sourcesContent":["import { Todo, Todolist } from './todolist-model';\r\nimport { TodolistRepository } from './todolist-module';\r\n\r\nexport class TodolistRepositoryDummy implements TodolistRepository {\r\n    private dummyData: { [k: string]: Todolist } = {\r\n        '1': {\r\n            todolistId: '1',\r\n            todolistName: 'Demo list 1'\r\n        },\r\n        '2': {\r\n            todolistId: '2',\r\n            todolistName: 'Demo list 2'\r\n        }\r\n    };\r\n\r\n    loadTodolist(todolistId: string): Promise<Todolist> {\r\n        return new Promise((resolve: any, reject: any): void => {\r\n            setTimeout(() => {\r\n                const list: Todolist = this.dummyData[todolistId];\r\n\r\n                if (!list) {\r\n                    reject(new Error(`List ${todolistId} does not exist.`));\r\n                } else {\r\n                    resolve(list);\r\n                }\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    async searchTodos(todolistId: string, lastTodolistId?: string, pageSize?: number): Promise<Todo[]> {\r\n        return ([\r\n            {\r\n                todoId: '1',\r\n                todolistId: '1',\r\n                title: 'My first todo!',\r\n                description: 'Major refactoring task',\r\n                dueDate: new Date(2019, 0, 1),\r\n                status: 'in_progress'\r\n            },\r\n            {\r\n                todoId: '2',\r\n                todolistId: '1',\r\n                title: 'Big job',\r\n                description: 'Don\\'t forget about important stuff.',\r\n                status: 'open'\r\n            },\r\n            {\r\n                todoId: '3',\r\n                todolistId: '1',\r\n                title: 'Start project',\r\n                description: '',\r\n                status: 'done'\r\n            },\r\n            {\r\n                todoId: '4',\r\n                todolistId: '1',\r\n                title: 'Translate project',\r\n                description: '',\r\n                status: 'wont_complete'\r\n            }\r\n        ] as Todo[])\r\n            .filter((todo: Todo) => todo.todolistId === todolistId);\r\n    }\r\n\r\n    addTodo(todo: Todo): Promise<Todo> {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    updateTodo(todo: Todo): Promise<Todo> {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    deleteTodo(todo: Todo): Promise<Todo> {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}\r\n"],"sourceRoot":""}]}