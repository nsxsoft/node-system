{"remainingRequest":"/Users/cbacon/Develop/modul-typescript-template/node_modules/babel-loader/lib/index.js!/Users/cbacon/Develop/modul-typescript-template/node_modules/ts-loader/index.js??ref--11-2!/Users/cbacon/Develop/modul-typescript-template/src/todolist/model/todolist-module.ts","dependencies":[{"path":"/Users/cbacon/Develop/modul-typescript-template/src/todolist/model/todolist-module.ts","mtime":1552514191000},{"path":"/Users/cbacon/Develop/modul-typescript-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cbacon/Develop/modul-typescript-template/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cbacon/Develop/modul-typescript-template/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/cbacon/Develop/modul-typescript-template/node_modules/@babel/runtime/regenerator\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport * as tslib_1 from \"tslib\";\nimport { Action, ModuleBase, Mutation } from '@ulaval/modul-vuex/dist/vuex-annotations';\nimport Vue from 'vue';\nimport { TodolistFormState, TodolistState } from './todolist-model';\nexport var TodolistModule =\n/*#__PURE__*/\nfunction (_ModuleBase) {\n  _inherits(TodolistModule, _ModuleBase);\n\n  function TodolistModule(todolistRepository, store) {\n    var _this;\n\n    var moduleName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Todolist';\n\n    _classCallCheck(this, TodolistModule);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodolistModule).call(this, moduleName, {\n      todolists: {},\n      todos: {}\n    }, store));\n    _this.todolistRepository = todolistRepository;\n    return _this;\n  }\n\n  _createClass(TodolistModule, [{\n    key: \"getTodolistState\",\n    value: function getTodolistState(todolistId) {\n      return this.state.todolists[todolistId];\n    }\n  }, {\n    key: \"onOpenNewForm\",\n    value: function onOpenNewForm(todolistState) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'new';\n      todolistState.todolistFormState = new TodolistFormState();\n      todolistState.todolistFormState.open = true;\n      todolistState.todolistFormState.mode = mode;\n    }\n  }, {\n    key: \"onConfirmForm\",\n    value: function onConfirmForm(state, todo) {\n      state.visibleTodos.push(todo);\n      state.todolistFormState = new TodolistFormState();\n    }\n  }, {\n    key: \"onCloseForm\",\n    value: function onCloseForm(state) {\n      state.todolistFormState = new TodolistFormState();\n    }\n  }, {\n    key: \"onDeleteTodo\",\n    value: function onDeleteTodo(state, todo) {\n      var index = state.visibleTodos.findIndex(function (val) {\n        return val === todo;\n      });\n\n      if (index >= 0) {\n        Vue.delete(state.visibleTodos, index);\n      }\n    }\n  }, {\n    key: \"loadTodolist\",\n    value: function () {\n      var _loadTodolist = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(todolistId) {\n        var todolist, visibleTodos;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setLoadingTodoList(todolistId, true);\n                _context.prev = 1;\n                _context.next = 4;\n                return this.todolistRepository.loadTodolist(todolistId);\n\n              case 4:\n                todolist = _context.sent;\n                _context.next = 7;\n                return this.todolistRepository.searchTodos(todolistId);\n\n              case 7:\n                visibleTodos = _context.sent;\n                this.updateTodoListState(todolist, visibleTodos);\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                this.setLoadingTodoList(todolistId, false, _context.t0);\n                throw _context.t0;\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 11]]);\n      }));\n\n      function loadTodolist(_x) {\n        return _loadTodolist.apply(this, arguments);\n      }\n\n      return loadTodolist;\n    }()\n  }, {\n    key: \"loadMore\",\n    value: function loadMore(todolistId) {}\n  }, {\n    key: \"addTodo\",\n    value: function addTodo(todo) {}\n  }, {\n    key: \"updateTodo\",\n    value: function updateTodo(todo) {}\n  }, {\n    key: \"deleteTodo\",\n    value: function deleteTodo(todo) {}\n  }, {\n    key: \"setLoadingTodoList\",\n    value: function setLoadingTodoList(todolistId, loading) {\n      var error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      var todolistState = this.state.todolists[todolistId];\n\n      if (!todolistState) {\n        todolistState = new TodolistState();\n        Vue.set(this.state.todolists, todolistId, todolistState);\n      }\n\n      todolistState.setLoading(loading);\n\n      if (error) {\n        todolistState.loadingError = true;\n      }\n    }\n  }, {\n    key: \"updateTodoListState\",\n    value: function updateTodoListState(todolist, visibleTodos) {\n      if (!todolist.todolistId) {\n        throw new Error('Invalid todolist');\n      }\n\n      var currentState = this.getTodolistState(todolist.todolistId);\n\n      if (currentState) {\n        currentState.todolist = todolist;\n      } else {\n        currentState = new TodolistState();\n        currentState.todolist = todolist;\n        this.state.todolists[todolist.todolistId] = currentState;\n      }\n\n      currentState.visibleTodos = visibleTodos;\n      currentState.setLoading(false);\n    }\n  }]);\n\n  return TodolistModule;\n}(ModuleBase);\n\ntslib_1.__decorate([Mutation()], TodolistModule.prototype, \"onOpenNewForm\", null);\n\ntslib_1.__decorate([Mutation()], TodolistModule.prototype, \"onConfirmForm\", null);\n\ntslib_1.__decorate([Mutation()], TodolistModule.prototype, \"onCloseForm\", null);\n\ntslib_1.__decorate([Mutation()], TodolistModule.prototype, \"onDeleteTodo\", null);\n\ntslib_1.__decorate([Action()], TodolistModule.prototype, \"loadTodolist\", null);\n\ntslib_1.__decorate([Action()], TodolistModule.prototype, \"loadMore\", null);\n\ntslib_1.__decorate([Action()], TodolistModule.prototype, \"addTodo\", null);\n\ntslib_1.__decorate([Action()], TodolistModule.prototype, \"updateTodo\", null);\n\ntslib_1.__decorate([Action()], TodolistModule.prototype, \"deleteTodo\", null);\n\ntslib_1.__decorate([Mutation()], TodolistModule.prototype, \"setLoadingTodoList\", null);\n\ntslib_1.__decorate([Mutation()], TodolistModule.prototype, \"updateTodoListState\", null);",{"version":3,"sources":["/Users/cbacon/Develop/modul-typescript-template/src/todolist/model/todolist-module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Action, ModuleBase, Mutation } from '@ulaval/modul-vuex/dist/vuex-annotations';\r\nimport Vue from 'vue';\r\nimport { Store } from 'vuex';\r\nimport { FormMode, Todo, Todolist, TodolistFormState, TodolistState } from './todolist-model';\r\n\r\nexport interface TodolistRepository {\r\n    loadTodolist(todolistId: string): Promise<Todolist>;\r\n    searchTodos(todolistId: string, lastTodolistId?: string, pageSize?: number): Promise<Todo[]>;\r\n    addTodo(todo: Todo): Promise<Todo>;\r\n    updateTodo(todo: Todo): Promise<Todo>;\r\n    deleteTodo(todo: Todo): Promise<Todo>;\r\n}\r\n\r\ninterface TodolistModuleState {\r\n    todos: { [k: string]: Todo | undefined };\r\n\r\n    todolists: { [k: string]: TodolistState | undefined };\r\n}\r\n\r\nexport class TodolistModule extends ModuleBase<TodolistModuleState> {\r\n    constructor(private todolistRepository: TodolistRepository, store: Store<any>, moduleName: string = 'Todolist') {\r\n        super(moduleName, {\r\n            todolists: {},\r\n            todos: {}\r\n        }, store);\r\n    }\r\n\r\n    public getTodolistState(todolistId: string): TodolistState | undefined {\r\n        return this.state.todolists[todolistId];\r\n    }\r\n\r\n    @Mutation()\r\n    public onOpenNewForm(todolistState: TodolistState, mode: FormMode = 'new'): void {\r\n        todolistState.todolistFormState = new TodolistFormState();\r\n        todolistState.todolistFormState.open = true;\r\n        todolistState.todolistFormState.mode = mode;\r\n    }\r\n\r\n    @Mutation()\r\n    public onConfirmForm(state: TodolistState, todo: Todo): void {\r\n        state.visibleTodos.push(todo);\r\n        state.todolistFormState = new TodolistFormState();\r\n    }\r\n\r\n    @Mutation()\r\n    public onCloseForm(state: TodolistState): void {\r\n        state.todolistFormState = new TodolistFormState();\r\n    }\r\n\r\n    @Mutation()\r\n    public onDeleteTodo(state: TodolistState, todo: Todo): void {\r\n        const index: number = state.visibleTodos.findIndex((val: Todo) => val === todo);\r\n\r\n        if (index >= 0) {\r\n            Vue.delete(state.visibleTodos, index);\r\n        }\r\n    }\r\n\r\n    @Action()\r\n    public async loadTodolist(todolistId: string): Promise<void> {\r\n\r\n        this.setLoadingTodoList(todolistId, true);\r\n\r\n        try {\r\n            const todolist: Todolist = await this.todolistRepository.loadTodolist(todolistId);\r\n            const visibleTodos: Todo[] = await this.todolistRepository.searchTodos(todolistId);\r\n\r\n            this.updateTodoListState(todolist, visibleTodos);\r\n        } catch (e) {\r\n            this.setLoadingTodoList(todolistId, false, e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    @Action()\r\n    public loadMore(todolistId: string): void {\r\n\r\n    }\r\n\r\n    @Action()\r\n    public addTodo(todo: Todo): void {\r\n\r\n    }\r\n\r\n    @Action()\r\n    public updateTodo(todo: Todo): void {\r\n\r\n    }\r\n\r\n    @Action()\r\n    public deleteTodo(todo: Todo): void {\r\n\r\n    }\r\n\r\n    @Mutation()\r\n    private setLoadingTodoList(todolistId: string, loading: boolean, error: any = undefined): void {\r\n        let todolistState: TodolistState | undefined = this.state.todolists[todolistId];\r\n\r\n        if (!todolistState) {\r\n            todolistState = new TodolistState();\r\n            Vue.set(this.state.todolists, todolistId, todolistState);\r\n        }\r\n\r\n        todolistState.setLoading(loading);\r\n\r\n        if (error) {\r\n            todolistState.loadingError = true;\r\n        }\r\n    }\r\n\r\n    @Mutation()\r\n    private updateTodoListState(todolist: Todolist, visibleTodos: Todo[]): void {\r\n        if (!todolist.todolistId) {\r\n            throw new Error('Invalid todolist');\r\n        }\r\n\r\n        let currentState: TodolistState | undefined = this.getTodolistState(todolist.todolistId);\r\n\r\n        if (currentState) {\r\n            currentState.todolist = todolist;\r\n        } else {\r\n            currentState = new TodolistState();\r\n            currentState.todolist = todolist;\r\n            this.state.todolists[todolist.todolistId] = currentState;\r\n        }\r\n\r\n        currentState.visibleTodos = visibleTodos;\r\n        currentState.setLoading(false);\r\n    }\r\n}\r\n"],"sourceRoot":""}]}