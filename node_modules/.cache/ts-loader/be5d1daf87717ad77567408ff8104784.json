{"remainingRequest":"/Users/cbacon/Develop/modul-typescript-template/node_modules/babel-loader/lib/index.js!/Users/cbacon/Develop/modul-typescript-template/node_modules/ts-loader/index.js??ref--11-2!/Users/cbacon/Develop/modul-typescript-template/src/common/components/main-header/main-header.ts","dependencies":[{"path":"/Users/cbacon/Develop/modul-typescript-template/src/common/components/main-header/main-header.ts","mtime":1552514191000},{"path":"/Users/cbacon/Develop/modul-typescript-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cbacon/Develop/modul-typescript-template/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cbacon/Develop/modul-typescript-template/node_modules/ts-loader/index.js","mtime":1545640398000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport * as tslib_1 from \"tslib\";\nvar MainHeader_1;\nimport { ENGLISH, FRENCH } from '@modul/utils/i18n/i18n';\nimport Vue from 'vue';\nimport { Component } from 'vue-property-decorator';\nimport WithRender from './main-header.html?style=./main-header.scss';\n\nvar MainHeader = MainHeader_1 =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(MainHeader, _Vue);\n\n  function MainHeader() {\n    var _this;\n\n    _classCallCheck(this, MainHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainHeader).apply(this, arguments));\n    _this.navOpened = false;\n    return _this;\n  }\n\n  _createClass(MainHeader, [{\n    key: \"onToggleLang\",\n    value: function onToggleLang() {\n      if (MainHeader_1.currentLang() === ENGLISH) {\n        localStorage.removeItem('lang');\n      } else {\n        localStorage.setItem('lang', ENGLISH);\n      }\n\n      window.location.reload();\n    }\n  }, {\n    key: \"toggleLangLabel\",\n    get: function get() {\n      return MainHeader_1.currentLang() === ENGLISH ? 'French' : 'English';\n    }\n  }], [{\n    key: \"currentLang\",\n    value: function currentLang() {\n      return localStorage.getItem('lang') === ENGLISH ? ENGLISH : FRENCH;\n    }\n  }]);\n\n  return MainHeader;\n}(Vue);\n\nMainHeader = MainHeader_1 = tslib_1.__decorate([WithRender, Component], MainHeader);\nexport default MainHeader;",{"version":3,"sources":["/Users/cbacon/Develop/modul-typescript-template/src/common/components/main-header/main-header.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAS,OAAT,EAAkB,MAAlB,QAAgC,wBAAhC;AACA,OAAO,GAAP,MAAgB,KAAhB;AACA,SAAS,SAAT,QAA0B,wBAA1B;AACA,OAAO,UAAP,MAAuB,6CAAvB;;AAIA,IAAqB,UAAU,GAAA,YAA/B;AAAA;AAAA;AAAA;;AAFA,wBAAA;AAAA;;AAAA;;;AAIY,UAAA,SAAA,GAAqB,KAArB;AAJZ;AAuBC;;AArBD;AAAA;AAAA,mCAIuB;AACf,UAAI,YAAU,CAAC,WAAX,OAA6B,OAAjC,EAA0C;AACtC,QAAA,YAAY,CAAC,UAAb,CAAwB,MAAxB;AACH,OAFD,MAEO;AACH,QAAA,YAAY,CAAC,OAAb,CAAqB,MAArB,EAA6B,OAA7B;AACH;;AAED,MAAA,MAAM,CAAC,QAAP,CAAgB,MAAhB;AACH;AAZL;AAAA;AAAA,wBAc8B;AACtB,aAAO,YAAU,CAAC,WAAX,OAA6B,OAA7B,GAAuC,QAAvC,GAAkD,SAAzD;AACH;AAhBL;AAAA;AAAA,kCAkB8B;AACtB,aAAO,YAAY,CAAC,OAAb,CAAqB,MAArB,MAAiC,OAAjC,GAA2C,OAA3C,GAAqD,MAA5D;AACH;AApBL;;AAAA;AAAA,EAAwC,GAAxC,CAAA;;AAAqB,UAAU,GAAA,YAAA,GAAA,OAAA,CAAA,UAAA,CAAA,CAF9B,UAE8B,EAD9B,SAC8B,CAAA,EAAV,UAAU,CAAV;eAAA,U","sourcesContent":["import { ENGLISH, FRENCH } from '@modul/utils/i18n/i18n';\nimport Vue from 'vue';\nimport { Component } from 'vue-property-decorator';\nimport WithRender from './main-header.html?style=./main-header.scss';\n\n@WithRender\n@Component\nexport default class MainHeader extends Vue {\n\n    private navOpened: boolean = false;\n\n    public onToggleLang(): void {\n        if (MainHeader.currentLang() === ENGLISH) {\n            localStorage.removeItem('lang');\n        } else {\n            localStorage.setItem('lang', ENGLISH);\n        }\n\n        window.location.reload();\n    }\n\n    public get toggleLangLabel(): string {\n        return MainHeader.currentLang() === ENGLISH ? 'French' : 'English';\n    }\n\n    private static currentLang(): string {\n        return localStorage.getItem('lang') === ENGLISH ? ENGLISH : FRENCH;\n    }\n}\n"],"sourceRoot":""}]}